{"ast":null,"code":"import { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { GET_CATEGORY } from \"../components/graphql/\";\nexport default function getProductsByCategory(props) {\n  const client = new ApolloClient({\n    uri: 'http://localhost:4000/',\n    cache: new InMemoryCache()\n  }); //         const GET_CATEGORY = gql`\n  //         query Query {\n  //   category(input: { title: \"${props}\" }) {\n  //     name \n  //     products {\n  //       id\n  //       name\n  //       inStock\n  //       gallery\n  //       description\n  //       category\n  //       attributes {\n  //         id\n  //         name\n  //         type\n  //         items {\n  //           displayValue\n  //           value\n  //           id\n  //         }\n  //       }\n  //       prices {\n  //         currency {\n  //           symbol\n  //           label\n  //         }\n  //         amount\n  //       }\n  //       brand\n  //     }\n  //   }\n  // } `;\n\n  async function fetchData() {\n    try {\n      console.log(props);\n      let result = await client.query({\n        query: GET_CATEGORY,\n\n        variables() {\n          return {\n            title: `${props}`\n          };\n        }\n\n      }).then(result => {\n        console.log(result.data.category.products);\n        return result;\n      }).catch(error => {\n        console.log(\"Something went wrong in response\");\n      });\n      return result.data.category.products;\n    } catch {}\n  }\n\n  const response = fetchData();\n  return response;\n}","map":{"version":3,"names":["ApolloClient","InMemoryCache","GET_CATEGORY","getProductsByCategory","props","client","uri","cache","fetchData","console","log","result","query","variables","title","then","data","category","products","catch","error","response"],"sources":["H:/Svetik/qa-testing/Scandiweb/volkotrub-shop-project/src/other-components-and-functions/getProductsByCategory.js"],"sourcesContent":["import {  ApolloClient, InMemoryCache } from '@apollo/client';\r\nimport { GET_CATEGORY } from \"../components/graphql/\";\r\n\r\nexport default function getProductsByCategory(props) {\r\n    const client = new ApolloClient({\r\n  uri: 'http://localhost:4000/',\r\n  cache: new InMemoryCache(),\r\n        });\r\n//         const GET_CATEGORY = gql`\r\n//         query Query {\r\n//   category(input: { title: \"${props}\" }) {\r\n//     name \r\n//     products {\r\n//       id\r\n//       name\r\n//       inStock\r\n//       gallery\r\n//       description\r\n//       category\r\n//       attributes {\r\n//         id\r\n//         name\r\n//         type\r\n//         items {\r\n//           displayValue\r\n//           value\r\n//           id\r\n//         }\r\n//       }\r\n//       prices {\r\n//         currency {\r\n//           symbol\r\n//           label\r\n//         }\r\n//         amount\r\n//       }\r\n//       brand\r\n//     }\r\n//   }\r\n  \r\n// } `;\r\n   \r\n  async function fetchData() {\r\n    try {\r\n      console.log(props);\r\n      let result = await client.query({ query: GET_CATEGORY, variables() { return {  title: `${props}` } } }).then((result) => {\r\n          console.log(result.data.category.products);\r\n              return result;\r\n          }).catch((error) => {\r\n              console.log(\"Something went wrong in response\");\r\n          });          \r\n        return result.data.category.products; \r\n      } catch {}\r\n  }  \r\n const response = fetchData();\r\n return response;\r\n}"],"mappings":"AAAA,SAAUA,YAAV,EAAwBC,aAAxB,QAA6C,gBAA7C;AACA,SAASC,YAAT,QAA6B,wBAA7B;AAEA,eAAe,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;EACjD,MAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;IAClCM,GAAG,EAAE,wBAD6B;IAElCC,KAAK,EAAE,IAAIN,aAAJ;EAF2B,CAAjB,CAAf,CADiD,CAKrD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;;EAEE,eAAeO,SAAf,GAA2B;IACzB,IAAI;MACFC,OAAO,CAACC,GAAR,CAAYN,KAAZ;MACA,IAAIO,MAAM,GAAG,MAAMN,MAAM,CAACO,KAAP,CAAa;QAAEA,KAAK,EAAEV,YAAT;;QAAuBW,SAAS,GAAG;UAAE,OAAO;YAAGC,KAAK,EAAG,GAAEV,KAAM;UAAnB,CAAP;QAA+B;;MAApE,CAAb,EAAqFW,IAArF,CAA2FJ,MAAD,IAAY;QACrHF,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACK,IAAP,CAAYC,QAAZ,CAAqBC,QAAjC;QACI,OAAOP,MAAP;MACH,CAHc,EAGZQ,KAHY,CAGLC,KAAD,IAAW;QAChBX,OAAO,CAACC,GAAR,CAAY,kCAAZ;MACH,CALc,CAAnB;MAME,OAAOC,MAAM,CAACK,IAAP,CAAYC,QAAZ,CAAqBC,QAA5B;IACD,CATH,CASI,MAAM,CAAE;EACb;;EACF,MAAMG,QAAQ,GAAGb,SAAS,EAA1B;EACA,OAAOa,QAAP;AACA"},"metadata":{},"sourceType":"module"}