{"ast":null,"code":"import { PureComponent } from \"react\";\nimport styled from \"styled-components\";\nconst FilterColor = styled.div`\nwidth: 32px;\nheight: 32px;\ncursor: pointer;\nbackground-color: ${props => props.color};\n${props => props.selected ? `outline-offset: 1px; outline: 1px solid #5ECE7B` : `none`};\n`;\n\nclass ShowAttributesInCart extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      product: this.props.product,\n      selectedAttributes: this.props.product.selectedAttributes,\n      colorFlag: false,\n      selectedColor: 0,\n      productIndex: this.props.productIndex\n    };\n    this.colorSelect = this.colorSelect.bind(this);\n  }\n\n  colorSelect(index) {\n    if (this.state.selectedColor === index) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  componentDidUpdate(props, state) {\n    if (JSON.stringify(this.props.cartProducts[this.state.productIndex].selectedAttributes) !== JSON.stringify(this.state.product.selectedAttributes)) {\n      this.setState({\n        selectedAttributes: this.props.cartProducts[this.state.productIndex].selectedAttributes\n      });\n    }\n  }\n\n  render() {\n    const {\n      selectedAttributes,\n      colorFlag,\n      selectedColor\n    } = this.state; // return (\n    // <>\n    //      {selectedAttributes.map((obj, indexAttribute) => {\n    //         let attributeNameIndex = obj.name;\n    //         this.setState({ [attributeNameIndex]: this.state[attributeNameIndex] });\n    //         if (this.state[attributeNameIndex] === undefined) { this.setState({ [attributeNameIndex]: 0 }) }\n    //         if (obj.type !== \"swatch\") {\n    //             return (\n    //                 <>\n    //                     <p key={`${indexAttribute}_${obj.name} cart`} className=\"attribute-name\">{obj.name}:</p>\n    //                     <div key={`itemContainer_${indexAttribute}`} className=\"cart-item-container\">\n    //                         {obj.items.map((item, index) => {\n    //                             return (\n    //                                 <div key={`${index}_${item} cart`} className={this.state[attributeNameIndex] === index ? \"attribute-item-selected\" : \"attribute-item\"}\n    //                                     onClick={() => { this.setState({ [attributeNameIndex]: index }) }}><p key={index}>{item.value}</p></div>\n    //                             );\n    //                         })}\n    //                     </div>\n    //                 </>\n    //             );\n    //         } else {\n    //             return (\n    //                 <>\n    //                     <p key={indexAttribute} className=\"attribute-name\">{obj.name}:</p>\n    //                     <div key={`colorContainer_${indexAttribute}`} className=\"attribute-color-container\">\n    //                         {obj.items.map((item, index) => {\n    //                             return (\n    //                                 <FilterColor key={index} color={item.value} selected={this.colorSelect(index)} onClick={() => { this.setState({ selectedColor: index }) }} />\n    //                             );\n    //                         })}\n    //                     </div>\n    //                 </>\n    //             )\n    //         }\n    //     })\n    //     }\n    // </>\n    // )\n\n    return null;\n  }\n\n}\n\nexport default ShowAttributesInCart;","map":{"version":3,"names":["PureComponent","styled","FilterColor","div","props","color","selected","ShowAttributesInCart","constructor","state","product","selectedAttributes","colorFlag","selectedColor","productIndex","colorSelect","bind","index","componentDidUpdate","JSON","stringify","cartProducts","setState","render"],"sources":["H:/Svetik/qa-testing/Scandiweb/volkotrub-shop-project/src/other-components-and-functions/ShowAttributesInCart.js"],"sourcesContent":["import { PureComponent } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst FilterColor = styled.div`\r\nwidth: 32px;\r\nheight: 32px;\r\ncursor: pointer;\r\nbackground-color: ${props => props.color};\r\n${props => props.selected ? `outline-offset: 1px; outline: 1px solid #5ECE7B` : `none`};\r\n`; \r\n\r\nclass ShowAttributesInCart extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            product: this.props.product,\r\n            selectedAttributes: this.props.product.selectedAttributes,\r\n            colorFlag: false,\r\n            selectedColor: 0,\r\n            productIndex: this.props.productIndex,\r\n        };\r\n        this.colorSelect = this.colorSelect.bind(this);\r\n    }\r\n     colorSelect(index) {\r\n        if (this.state.selectedColor === index) {\r\n            return true;\r\n        } else { return false; }\r\n    }\r\n    componentDidUpdate(props, state) {\r\n        if (JSON.stringify(this.props.cartProducts[this.state.productIndex].selectedAttributes) !== JSON.stringify(this.state.product.selectedAttributes)) {\r\n            this.setState({ selectedAttributes: this.props.cartProducts[this.state.productIndex].selectedAttributes});\r\n         }\r\n    \r\n  }\r\n    render() {\r\n        const { selectedAttributes, colorFlag, selectedColor } = this.state;\r\n            // return (\r\n            // <>\r\n            //      {selectedAttributes.map((obj, indexAttribute) => {\r\n            //         let attributeNameIndex = obj.name;\r\n            //         this.setState({ [attributeNameIndex]: this.state[attributeNameIndex] });\r\n            //         if (this.state[attributeNameIndex] === undefined) { this.setState({ [attributeNameIndex]: 0 }) }\r\n            //         if (obj.type !== \"swatch\") {\r\n            //             return (\r\n            //                 <>\r\n            //                     <p key={`${indexAttribute}_${obj.name} cart`} className=\"attribute-name\">{obj.name}:</p>\r\n            //                     <div key={`itemContainer_${indexAttribute}`} className=\"cart-item-container\">\r\n            //                         {obj.items.map((item, index) => {\r\n            //                             return (\r\n            //                                 <div key={`${index}_${item} cart`} className={this.state[attributeNameIndex] === index ? \"attribute-item-selected\" : \"attribute-item\"}\r\n            //                                     onClick={() => { this.setState({ [attributeNameIndex]: index }) }}><p key={index}>{item.value}</p></div>\r\n            //                             );\r\n            //                         })}\r\n            //                     </div>\r\n            //                 </>\r\n            //             );\r\n            //         } else {\r\n            //             return (\r\n            //                 <>\r\n            //                     <p key={indexAttribute} className=\"attribute-name\">{obj.name}:</p>\r\n            //                     <div key={`colorContainer_${indexAttribute}`} className=\"attribute-color-container\">\r\n            //                         {obj.items.map((item, index) => {\r\n            //                             return (\r\n            //                                 <FilterColor key={index} color={item.value} selected={this.colorSelect(index)} onClick={() => { this.setState({ selectedColor: index }) }} />\r\n            //                             );\r\n            //                         })}\r\n            //                     </div>\r\n            //                 </>\r\n            //             )\r\n            //         }\r\n            //     })\r\n            //     }\r\n            // </>\r\n            // )\r\n        return null;\r\n        \r\n    }\r\n}\r\n\r\nexport default ShowAttributesInCart;"],"mappings":"AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,WAAW,GAAGD,MAAM,CAACE,GAAI;AAC/B;AACA;AACA;AACA,oBAAoBC,KAAK,IAAIA,KAAK,CAACC,KAAM;AACzC,EAAED,KAAK,IAAIA,KAAK,CAACE,QAAN,GAAkB,iDAAlB,GAAsE,MAAM;AACvF,CANA;;AAQA,MAAMC,oBAAN,SAAmCP,aAAnC,CAAiD;EAC7CQ,WAAW,CAACJ,KAAD,EAAQ;IACf,MAAMA,KAAN;IACA,KAAKK,KAAL,GAAa;MACTC,OAAO,EAAE,KAAKN,KAAL,CAAWM,OADX;MAETC,kBAAkB,EAAE,KAAKP,KAAL,CAAWM,OAAX,CAAmBC,kBAF9B;MAGTC,SAAS,EAAE,KAHF;MAITC,aAAa,EAAE,CAJN;MAKTC,YAAY,EAAE,KAAKV,KAAL,CAAWU;IALhB,CAAb;IAOA,KAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;EACH;;EACAD,WAAW,CAACE,KAAD,EAAQ;IAChB,IAAI,KAAKR,KAAL,CAAWI,aAAX,KAA6BI,KAAjC,EAAwC;MACpC,OAAO,IAAP;IACH,CAFD,MAEO;MAAE,OAAO,KAAP;IAAe;EAC3B;;EACDC,kBAAkB,CAACd,KAAD,EAAQK,KAAR,EAAe;IAC7B,IAAIU,IAAI,CAACC,SAAL,CAAe,KAAKhB,KAAL,CAAWiB,YAAX,CAAwB,KAAKZ,KAAL,CAAWK,YAAnC,EAAiDH,kBAAhE,MAAwFQ,IAAI,CAACC,SAAL,CAAe,KAAKX,KAAL,CAAWC,OAAX,CAAmBC,kBAAlC,CAA5F,EAAmJ;MAC/I,KAAKW,QAAL,CAAc;QAAEX,kBAAkB,EAAE,KAAKP,KAAL,CAAWiB,YAAX,CAAwB,KAAKZ,KAAL,CAAWK,YAAnC,EAAiDH;MAAvE,CAAd;IACF;EAEP;;EACCY,MAAM,GAAG;IACL,MAAM;MAAEZ,kBAAF;MAAsBC,SAAtB;MAAiCC;IAAjC,IAAmD,KAAKJ,KAA9D,CADK,CAED;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IACJ,OAAO,IAAP;EAEH;;AAjE4C;;AAoEjD,eAAeF,oBAAf"},"metadata":{},"sourceType":"module"}