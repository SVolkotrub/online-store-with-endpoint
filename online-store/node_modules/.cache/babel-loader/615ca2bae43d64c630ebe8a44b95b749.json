{"ast":null,"code":"var _jsxFileName = \"H:\\\\Svetik\\\\qa-testing\\\\Scandiweb\\\\volkotrub-shop-project\\\\src\\\\pages\\\\Cart.js\";\nimport { PureComponent } from \"react\";\nimport { connect } from 'react-redux';\nimport plus from \"../images/plus-square.png\";\nimport minus from \"../images/minus-square.png\";\nimport { changeProductQuantity, decreaseProductQuantity, deleteProduct, getTotalPrice } from \"../store/cart\";\nimport \"./Cart.css\";\nimport \"./ProductPage.css\";\nimport Slider from \"../other-components-and-functions/Slider\";\nimport ShowAttributesInCart from \"../other-components-and-functions/ShowAttributesInCart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Cart extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalAmount: []\n    };\n    this.getCurrentPrice = this.getCurrentPrice.bind(this);\n    this.decreaseDeleteProduct = this.decreaseDeleteProduct.bind(this); // this.getTotalPrice = this.getTotalPrice.bind(this);\n  }\n\n  getCurrentPrice(props) {\n    let current;\n    props.map(item => {\n      if (item.currency.symbol === this.props.currency) {\n        current = item.amount;\n        return current;\n      } else {\n        return null;\n      }\n    });\n    this.state.totalAmount.push(current);\n    return current;\n  } // getTotalPrice() {\n  //     let total = 0;\n  //     this.props.cartProducts.map((product, index) => {\n  //         return total = product.prices.filter(el => el.currency.symbol === this.props.currency).reduce((total, item) => total + (item.amount * product.productQuantity), total)\n  //     });\n  //     return total;\n  // }\n\n\n  decreaseDeleteProduct(index) {\n    this.props.cartProducts[index].productQuantity > 1 ? this.props.dispatch(decreaseProductQuantity(index)) : this.props.dispatch(deleteProduct(index));\n  }\n\n  render() {\n    if (this.props.cartQuantity !== 0) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-header\",\n          children: \"CART\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), this.props.cartProducts.map((product, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-product-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"part-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cart-brand\",\n                children: product.brand\n              }, `${product.brand}_${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cart-name\",\n                children: product.name\n              }, `${product.name}_${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cart-price\",\n                children: [this.props.currency, this.getCurrentPrice(product.prices)]\n              }, `price_${index}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(ShowAttributesInCart, {\n                view: \"cart\",\n                product: product,\n                productIndex: index\n              }, `attr element${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 29\n              }, this)]\n            }, `${index} product part 1`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"part-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btn-wrapper\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"btn-image\",\n                  src: plus,\n                  alt: \"logo\",\n                  onClick: () => this.props.dispatch(changeProductQuantity(index))\n                }, `${index} plus img`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"counter\",\n                  children: product.productQuantity\n                }, `${index} counter`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"btn-image\",\n                  src: minus,\n                  alt: \"logo\",\n                  onClick: () => this.decreaseDeleteProduct(index)\n                }, `${index} minus-img`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 33\n                }, this)]\n              }, `${index} wrapper`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"slider-container\",\n                children: /*#__PURE__*/_jsxDEV(Slider, {\n                  data: product.gallery,\n                  productIndex: index\n                }, `${index} slider`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 33\n                }, this)\n              }, `${index} slider container`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 30\n              }, this)]\n            }, `${index} product part 2`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this)]\n          }, `${index} product`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-description\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-column-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"order-text\",\n              children: \"Tax 21%:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"order-text\",\n              children: \"Quantity:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"order-text\",\n              children: \"Total:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-column-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"order-quantity\",\n              children: [this.props.currency, Math.round(this.props.dispatch.getTotalPrice() * 0.21)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"order-quantity\",\n              children: this.props.cartQuantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"order-quantity\",\n              children: [this.props.currency, this.props.dispatch.getTotalPrice()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"order-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your cart is empty...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currency: state.currency.currency,\n    cartProducts: state.cart.products,\n    cartQuantity: state.cart.quantity\n  };\n}\n\nexport default connect(mapStateToProps)(Cart);","map":{"version":3,"names":["PureComponent","connect","plus","minus","changeProductQuantity","decreaseProductQuantity","deleteProduct","getTotalPrice","Slider","ShowAttributesInCart","Cart","constructor","props","state","totalAmount","getCurrentPrice","bind","decreaseDeleteProduct","current","map","item","currency","symbol","amount","push","index","cartProducts","productQuantity","dispatch","render","cartQuantity","product","brand","name","prices","gallery","Math","round","mapStateToProps","cart","products","quantity"],"sources":["H:/Svetik/qa-testing/Scandiweb/volkotrub-shop-project/src/pages/Cart.js"],"sourcesContent":["import { PureComponent } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport plus from \"../images/plus-square.png\";\r\nimport minus from \"../images/minus-square.png\";\r\nimport { changeProductQuantity, decreaseProductQuantity, deleteProduct, getTotalPrice } from \"../store/cart\";\r\nimport \"./Cart.css\";\r\nimport \"./ProductPage.css\";\r\n\r\nimport Slider from \"../other-components-and-functions/Slider\";\r\nimport ShowAttributesInCart from \"../other-components-and-functions/ShowAttributesInCart\";\r\n\r\nclass Cart extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            totalAmount: [],\r\n        };\r\n        this.getCurrentPrice = this.getCurrentPrice.bind(this);\r\n        this.decreaseDeleteProduct = this.decreaseDeleteProduct.bind(this);\r\n        // this.getTotalPrice = this.getTotalPrice.bind(this);\r\n    }\r\n    getCurrentPrice(props) { \r\n        let current;\r\n        props.map((item) => {\r\n            if (item.currency.symbol === this.props.currency) {\r\n                current = item.amount;\r\n                return current;\r\n            } else { return null; }\r\n        })\r\n        this.state.totalAmount.push(current);\r\n        return current;\r\n    }\r\n    // getTotalPrice() {\r\n    //     let total = 0;\r\n    //     this.props.cartProducts.map((product, index) => {\r\n    //         return total = product.prices.filter(el => el.currency.symbol === this.props.currency).reduce((total, item) => total + (item.amount * product.productQuantity), total)\r\n    //     });\r\n    //     return total;\r\n    // }\r\n    decreaseDeleteProduct(index) {\r\n        this.props.cartProducts[index].productQuantity > 1 ? this.props.dispatch(decreaseProductQuantity(index)) : this.props.dispatch(deleteProduct(index));\r\n    }\r\n    render() {\r\n        \r\n        if(this.props.cartQuantity !== 0)\r\n        {\r\n            return (\r\n            <>\r\n            <div className=\"cart-header\">CART</div>          \r\n                {this.props.cartProducts.map((product, index) => {\r\n                return (\r\n                    <div className=\"cart-product-block\" key={`${index} product`}>\r\n                        <div className=\"part-1\" key={`${index} product part 1`}>\r\n                            <div className=\"cart-brand\" key={`${product.brand}_${index}`}>{product.brand }</div>\r\n                            <div className=\"cart-name\" key={`${product.name}_${index}`}>{product.name}</div>\r\n                            <div className=\"cart-price\" key={`price_${index}`}>{ this.props.currency}{this.getCurrentPrice(product.prices)}</div>\r\n                            \r\n                            <ShowAttributesInCart view=\"cart\" key={`attr element${index}`} product={ product} productIndex={index} />\r\n                        </div>\r\n                        <div className=\"part-2\" key={`${index} product part 2`}>\r\n                            <div className=\"btn-wrapper\" key={`${index} wrapper`}>\r\n                                <img className=\"btn-image\" src={plus} alt=\"logo\" key={`${index} plus img`} onClick={()=>this.props.dispatch(changeProductQuantity(index))} />\r\n                                <p className=\"counter\" key={`${index} counter`}>{ product.productQuantity}</p>\r\n                                <img className=\"btn-image\" src={minus} alt=\"logo\" key={`${index} minus-img`} onClick={()=>this.decreaseDeleteProduct(index)} /> \r\n                            </div>\r\n                             <div className=\"slider-container\"key={`${index} slider container`} >\r\n                                <Slider data={product.gallery} productIndex={index} key={`${index} slider`} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                        )\r\n                })}\r\n                <div className=\"order-description\">\r\n                    <div className=\"order-column-1\">\r\n                        <p className=\"order-text\">Tax 21%:</p>\r\n                        <p className=\"order-text\">Quantity:</p>\r\n                        <p className=\"order-text\">Total:</p>\r\n                    </div>\r\n                    <div className=\"order-column-2\">\r\n                     <p className=\"order-quantity\">{ this.props.currency}{Math.round(this.props.dispatch.getTotalPrice() * 0.21)}</p>\r\n                            <p className=\"order-quantity\">{ this.props.cartQuantity}</p>\r\n                            <p className=\"order-quantity\">{this.props.currency}{ this.props.dispatch.getTotalPrice()}</p>\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" className=\"order-btn\"><p> order</p></button>\r\n                    \r\n            </>\r\n            )\r\n        } else {\r\n           return  <p>Your cart is empty...</p>\r\n        }\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        currency: state.currency.currency,\r\n        cartProducts: state.cart.products,\r\n        cartQuantity: state.cart.quantity,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Cart);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}