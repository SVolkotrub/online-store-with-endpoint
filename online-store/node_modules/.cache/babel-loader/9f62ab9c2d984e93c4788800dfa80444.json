{"ast":null,"code":"var _jsxFileName = \"H:\\\\Svetik\\\\qa-testing\\\\Scandiweb\\\\volkotrub-shop-project\\\\src\\\\pages\\\\AllCategories.js\",\n    _s = $RefreshSig$();\n\nimport { PureComponent } from \"react\";\nimport { useQuery, gql } from '@apollo/client';\nimport { Query } from \"react-apollo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_ALL = gql`\n        query Query($input: CategoryInput) {\n  category(input: { title: \"all\" }) {\n    name\n    products {\n      id\n      name\n      inStock\n      gallery\n      description\n      category\n      attributes {\n        id\n        name\n        type\n        items {\n          displayValue\n          value\n          id\n        }\n      }\n      prices {\n        currency {\n          symbol\n          label\n        }\n        amount\n      }\n      brand\n    }\n  }\n  currencies {\n    label\n    symbol\n  }\n}\n\n        `;\n\nconst CategoriesQuery = () => {\n  return /*#__PURE__*/_jsxDEV(Query, {\n    query: GET_ALL\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CategoriesQuery;\n\nfunction QueryAll() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ALL);\n  return this.setState({\n    data: data.category,\n    loading: false,\n    error: error\n  });\n}\n\n_s(QueryAll, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = QueryAll;\n\nclass AllCategories extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      loading: false,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    QueryAll();\n  }\n\n  render() {\n    const {\n      data,\n      loading,\n      error\n    } = this.state;\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Unfortunately, something is wrong with database. Please try later...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 23\n    }, this);\n    return console.log(data);\n  }\n\n}\n\n;\nexport default AllCategories;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CategoriesQuery\");\n$RefreshReg$(_c2, \"QueryAll\");","map":{"version":3,"names":["PureComponent","useQuery","gql","Query","GET_ALL","CategoriesQuery","QueryAll","loading","error","data","setState","category","AllCategories","constructor","props","state","componentDidMount","render","console","log"],"sources":["H:/Svetik/qa-testing/Scandiweb/volkotrub-shop-project/src/pages/AllCategories.js"],"sourcesContent":["import { PureComponent } from \"react\";\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport { Query } from \"react-apollo\";\r\nconst GET_ALL = gql`\r\n        query Query($input: CategoryInput) {\r\n  category(input: { title: \"all\" }) {\r\n    name\r\n    products {\r\n      id\r\n      name\r\n      inStock\r\n      gallery\r\n      description\r\n      category\r\n      attributes {\r\n        id\r\n        name\r\n        type\r\n        items {\r\n          displayValue\r\n          value\r\n          id\r\n        }\r\n      }\r\n      prices {\r\n        currency {\r\n          symbol\r\n          label\r\n        }\r\n        amount\r\n      }\r\n      brand\r\n    }\r\n  }\r\n  currencies {\r\n    label\r\n    symbol\r\n  }\r\n}\r\n\r\n        `;\r\nconst CategoriesQuery = () => {\r\n    return (\r\n        <Query query={GET_ALL}>\r\n            \r\n        </Query>\r\n    )\r\n}\r\n   \r\nfunction QueryAll() {\r\n            \r\n        const { loading, error, data } = useQuery(GET_ALL);\r\n         return this.setState({ data: data.category, loading: false, error: error });\r\n            \r\n    }\r\nclass AllCategories extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        data: [],\r\n        loading: false,\r\n        error: null,\r\n        };\r\n    }\r\n \r\n    \r\n    componentDidMount() {\r\n        this.setState({ loading: true });\r\n        QueryAll();    \r\n \r\n        }\r\n        \r\n    \r\nrender() {\r\n    const { data, loading, error } = this.state;\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Unfortunately, something is wrong with database. Please try later...</p>;\r\n    return console.log(data);\r\n    }\r\n};\r\n\r\nexport default AllCategories;"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,SAASC,KAAT,QAAsB,cAAtB;;AACA,MAAMC,OAAO,GAAGF,GAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SArCA;;AAsCA,MAAMG,eAAe,GAAG,MAAM;EAC1B,oBACI,QAAC,KAAD;IAAO,KAAK,EAAED;EAAd;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAND;;KAAMC,e;;AAQN,SAASC,QAAT,GAAoB;EAAA;;EAEZ,MAAM;IAAEC,OAAF;IAAWC,KAAX;IAAkBC;EAAlB,IAA2BR,QAAQ,CAACG,OAAD,CAAzC;EACC,OAAO,KAAKM,QAAL,CAAc;IAAED,IAAI,EAAEA,IAAI,CAACE,QAAb;IAAuBJ,OAAO,EAAE,KAAhC;IAAuCC,KAAK,EAAEA;EAA9C,CAAd,CAAP;AAEJ;;GALIF,Q;UAEgCL,Q;;;MAFhCK,Q;;AAMT,MAAMM,aAAN,SAA4BZ,aAA5B,CAA0C;EACtCa,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACbN,IAAI,EAAE,EADO;MAEbF,OAAO,EAAE,KAFI;MAGbC,KAAK,EAAE;IAHM,CAAb;EAKH;;EAGDQ,iBAAiB,GAAG;IAChB,KAAKN,QAAL,CAAc;MAAEH,OAAO,EAAE;IAAX,CAAd;IACAD,QAAQ;EAEP;;EAGTW,MAAM,GAAG;IACL,MAAM;MAAER,IAAF;MAAQF,OAAR;MAAiBC;IAAjB,IAA2B,KAAKO,KAAtC;IACA,IAAIR,OAAJ,EAAa,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;IACb,IAAIC,KAAJ,EAAW,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;IACX,OAAOU,OAAO,CAACC,GAAR,CAAYV,IAAZ,CAAP;EACC;;AAvBqC;;AAwBzC;AAED,eAAeG,aAAf"},"metadata":{},"sourceType":"module"}