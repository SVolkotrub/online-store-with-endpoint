{"ast":null,"code":"var _jsxFileName = \"H:\\\\Svetik\\\\qa-testing\\\\Scandiweb\\\\volkotrub-shop-project\\\\src\\\\other-components-and-functions\\\\ShowAttributesInCart.js\";\nimport { PureComponent } from \"react\";\nimport { connect } from 'react-redux';\nimport { updateAttributeIndex } from \"../store/cart\";\nimport styled from \"styled-components\";\nimport \"../components/MiniCart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FilterColor = styled.div`\nwidth: ${props => props.view === \"cart\" ? `32px` : `16px`};\nheight: ${props => props.view === \"cart\" ? `32px` : `16px`};\ncursor: pointer;\nbackground-color: ${props => props.color};\n${props => props.selected ? `outline-offset: 1px; outline: 1px solid #5ECE7B` : `none`};\n`;\n_c = FilterColor;\nconst TextItem = styled.p`\nmargin-top: ${props => props.view === \"cart\" ? `13px` : `0px`};\n`;\n_c2 = TextItem;\n\nclass ShowAttributesInCart extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedAttributes: this.props.product.selectedAttributes,\n      productIndex: this.props.productIndex // attributeStyle: this.props.view === \"cart\" ? [\"attribute-item-selected\", \"attribute-item\"] : [\"minicart-attribute-item-selected\", \"minicart-attribute-item\"],\n\n    };\n    this.colorSelect = this.colorSelect.bind(this);\n    this.updateAttribute = this.updateAttribute.bind(this);\n  }\n\n  colorSelect(indexAttribute, index) {\n    if (this.props.cartProducts[this.state.productIndex].selectedAttributes[indexAttribute][1] === index) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  updateAttribute(indexAttribute, index) {\n    const temp = {\n      productIndex: this.props.productIndex,\n      indexAttribute,\n      index\n    };\n    this.props.dispatch(updateAttributeIndex(temp));\n  }\n\n  componentDidUpdate(props, state) {\n    if (JSON.stringify(this.state.selectedAttributes) !== JSON.stringify(this.props.cartProducts[this.state.productIndex].selectedAttributes)) {\n      this.setState({\n        selectedAttributes: this.props.cartProducts[this.state.productIndex].selectedAttributes\n      });\n    }\n  }\n\n  render() {\n    this.props.view === \"cart\" ? this.setState({\n      attributeStyle: [\"attribute-item-selected\", \"attribute-item\"]\n    }) : this.setState({\n      attributeStyle: [\"minicart-attribute-item-selected\", \"minicart-attribute-item\"]\n    });\n    const {\n      selectedAttributes,\n      productIndex,\n      attributeStyle\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: this.props.cartProducts[productIndex].attributes.map((obj, indexAttribute) => {\n        if (obj.type !== \"swatch\") {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: this.props.view === \"cart\" ? \"attribute-name\" : \"minicart-attribute-name\",\n              children: [obj.name, \":\"]\n            }, `${indexAttribute}_${obj.name} cart`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-item-container\",\n              children: obj.items.map((item, index) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: selectedAttributes[indexAttribute][1] === index ? attributeStyle[0] : attributeStyle[1],\n                  onClick: () => {\n                    this.updateAttribute(indexAttribute, index);\n                  },\n                  children: [\" \", /*#__PURE__*/_jsxDEV(TextItem, {\n                    view: this.props.view,\n                    children: item.value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 114\n                  }, this), \" \"]\n                }, `${index}_${item} cart`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 45\n                }, this);\n              })\n            }, `itemContainer_${indexAttribute}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true);\n        } else {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: this.props.view === \"cart\" ? \"attribute-name\" : \"minicart-attribute-name\",\n              children: [obj.name, \":\"]\n            }, indexAttribute, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-attribute-color-container\",\n              children: obj.items.map((item, index) => {\n                return /*#__PURE__*/_jsxDEV(FilterColor, {\n                  view: this.props.view === \"cart\" ? \"cart\" : \"minicart\",\n                  color: item.value,\n                  selected: this.colorSelect(indexAttribute, index),\n                  onClick: () => {\n                    this.updateAttribute(indexAttribute, index);\n                  }\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 45\n                }, this);\n              })\n            }, `colorContainer_${indexAttribute}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true);\n        }\n      })\n    }, void 0, false); // return null;\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currency: state.currency.currency,\n    cartProducts: state.cart.products,\n    cartQuantity: state.cart.quantity\n  };\n}\n\nexport default connect(mapStateToProps)(ShowAttributesInCart);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FilterColor\");\n$RefreshReg$(_c2, \"TextItem\");","map":{"version":3,"names":["PureComponent","connect","updateAttributeIndex","styled","FilterColor","div","props","view","color","selected","TextItem","p","ShowAttributesInCart","constructor","state","selectedAttributes","product","productIndex","colorSelect","bind","updateAttribute","indexAttribute","index","cartProducts","temp","dispatch","componentDidUpdate","JSON","stringify","setState","render","attributeStyle","attributes","map","obj","type","name","items","item","value","mapStateToProps","currency","cart","products","cartQuantity","quantity"],"sources":["H:/Svetik/qa-testing/Scandiweb/volkotrub-shop-project/src/other-components-and-functions/ShowAttributesInCart.js"],"sourcesContent":["import { PureComponent } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { updateAttributeIndex } from \"../store/cart\";\r\nimport styled from \"styled-components\";\r\nimport \"../components/MiniCart.css\";\r\n\r\nconst FilterColor = styled.div`\r\nwidth: ${props => props.view === \"cart\" ? `32px` : `16px`};\r\nheight: ${props => props.view === \"cart\" ? `32px` : `16px`};\r\ncursor: pointer;\r\nbackground-color: ${props => props.color};\r\n${props => props.selected ? `outline-offset: 1px; outline: 1px solid #5ECE7B` : `none`};\r\n`; \r\nconst TextItem = styled.p`\r\nmargin-top: ${props => props.view === \"cart\" ? `13px` : `0px`};\r\n`;\r\nclass ShowAttributesInCart extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  \r\n            selectedAttributes: this.props.product.selectedAttributes,\r\n            productIndex: this.props.productIndex,\r\n            // attributeStyle: this.props.view === \"cart\" ? [\"attribute-item-selected\", \"attribute-item\"] : [\"minicart-attribute-item-selected\", \"minicart-attribute-item\"],\r\n           };\r\n        this.colorSelect = this.colorSelect.bind(this);\r\n        this.updateAttribute = this.updateAttribute.bind(this);\r\n        \r\n    }\r\n     colorSelect(indexAttribute, index) {\r\n         if (this.props.cartProducts[this.state.productIndex].selectedAttributes[indexAttribute][1] === index) {\r\n            \r\n            return true;\r\n        } else { return false; }\r\n    }\r\n    updateAttribute(indexAttribute, index) {\r\n        const temp = {productIndex: this.props.productIndex, indexAttribute, index}\r\n        this.props.dispatch(updateAttributeIndex(temp));\r\n    }\r\ncomponentDidUpdate(props, state) {\r\n     if (JSON.stringify(this.state.selectedAttributes) !== JSON.stringify(this.props.cartProducts[this.state.productIndex].selectedAttributes)) {\r\n        this.setState({ selectedAttributes: this.props.cartProducts[this.state.productIndex].selectedAttributes });\r\n       \r\n    }\r\n  }\r\n    render() {\r\n        this.props.view === \"cart\" ? this.setState({ attributeStyle: [\"attribute-item-selected\", \"attribute-item\"] }) : this.setState({ attributeStyle: [\"minicart-attribute-item-selected\", \"minicart-attribute-item\"] });\r\n        const { selectedAttributes, productIndex, attributeStyle} = this.state;\r\n            return (\r\n            <>\r\n                 {this.props.cartProducts[productIndex].attributes.map((obj, indexAttribute) => {\r\n                     if (obj.type !== \"swatch\") {\r\n                        return (\r\n                            <>\r\n                                <p key={`${indexAttribute}_${obj.name} cart`} className= {this.props.view === \"cart\"? \"attribute-name\" : \"minicart-attribute-name\"}>{obj.name}:</p>\r\n                                <div key={`itemContainer_${indexAttribute}`} className=\"cart-item-container\" >\r\n                                    {obj.items.map((item, index) => {\r\n                                        return (\r\n                                            <div key={`${index}_${item} cart`} className={ selectedAttributes[indexAttribute][1] === index ? attributeStyle[0] : attributeStyle[1] }\r\n                                                onClick={() => {this.updateAttribute(indexAttribute, index)  }}> <TextItem view={this.props.view}>{item.value}</TextItem> </div>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                            </>\r\n                        );\r\n                    } else {\r\n                        return (\r\n                            <>\r\n                                <p key={indexAttribute} className={this.props.view === \"cart\"? \"attribute-name\" : \"minicart-attribute-name\"}>{obj.name}:</p>\r\n                                <div key={`colorContainer_${indexAttribute}`} className=\"cart-attribute-color-container\">\r\n                                    {obj.items.map((item, index) => {\r\n                                        return (\r\n                                            <FilterColor view={this.props.view === \"cart\" ? \"cart\" : \"minicart\" } key={index} color={item.value} selected={this.colorSelect(indexAttribute,index)} onClick={() => { this.updateAttribute(indexAttribute, index) }} />\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                })\r\n                }\r\n            </>\r\n            )\r\n        // return null;\r\n        \r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        currency: state.currency.currency,\r\n        cartProducts: state.cart.products,\r\n        cartQuantity: state.cart.quantity,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(ShowAttributesInCart);"],"mappings":"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"},"metadata":{},"sourceType":"module"}