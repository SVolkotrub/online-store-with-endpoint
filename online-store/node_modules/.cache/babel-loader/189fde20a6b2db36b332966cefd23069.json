{"ast":null,"code":"var _jsxFileName = \"H:\\\\Svetik\\\\qa-testing\\\\Scandiweb\\\\volkotrub-shop-project\\\\src\\\\pages\\\\AllCategories.js\";\nimport { PureComponent } from \"react\";\nimport { gql, ApolloClient, InMemoryCache } from '@apollo/client';\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = styled.div`\n  font-size: 42px;\n  font-weight: 400;\n  line-height: 160%;\n  color: #1D1F22;\n  margin-left: 100px;\n  text-align: left;\n`;\n_c = Header;\nconst ContainerProductList = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 0px 100px 190px 100px;\n  \n`;\n\nclass AllCategories extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.fetchAll = () => {\n      const client = new ApolloClient({\n        uri: 'http://localhost:4000/',\n        cache: new InMemoryCache()\n      });\n      const GET_ALL = gql`\n        query Query {\n  category(input: { title: \"all\" }) {\n    name\n    \n    products {\n      id\n      \n      name\n      inStock\n      gallery\n      description\n      category\n      attributes {\n        id\n        \n        name\n        type\n        items {\n          displayValue\n          \n          value\n          id\n        }\n      }\n      prices {\n        currency {\n          symbol\n          \n          label\n        }\n        amount\n        \n      }\n      brand\n    }\n  }\n  currencies {\n    label\n    \n    symbol\n  }\n} `;\n      client.query({\n        query: GET_ALL\n      }).then(result => {\n        console.log(result);\n        this.setState({\n          data: result.data.category.products,\n          loading: false\n        });\n      }, error => {\n        this.setState({\n          loading: true,\n          error: error\n        });\n      });\n    };\n\n    this.state = {\n      data: [],\n      loading: false,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    this.fetchAll();\n  }\n\n  render() {\n    const {\n      data,\n      loading,\n      error\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Something went wrong\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (data !== []) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: \"All products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: data.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: product.gallery[0],\n              alt: \" product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)]\n          }, product.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true);\n    } else {\n      this.fetchAll();\n      return \"Loading...\";\n    }\n  }\n\n}\n\n;\nexport default AllCategories; //               query Query($input: CategoryInput) {\n//   category(input: { title: \"all\" }) {\n//     name\n//     __typename @skip(if: true)\n//     products {\n//       id\n//       __typename @skip(if: true)\n//       name\n//       inStock\n//       gallery\n//       description\n//       category\n//       attributes {\n//         id\n//         __typename @skip(if: true)\n//         name\n//         type\n//         items {\n//           displayValue\n//           __typename @skip(if: true)\n//           value\n//           id\n//         }\n//       }\n//       prices {\n//         currency {\n//           symbol\n//           __typename @skip(if: true)\n//           label\n//         }\n//         amount\n//         __typename @skip(if: true)\n//       }\n//       brand\n//     }\n//   }\n//   currencies {\n//     label\n//     __typename @skip(if: true)\n//     symbol\n//   }\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["PureComponent","gql","ApolloClient","InMemoryCache","styled","Header","div","ContainerProductList","AllCategories","constructor","props","fetchAll","client","uri","cache","GET_ALL","query","then","result","console","log","setState","data","category","products","loading","error","state","componentDidMount","render","map","product","name","gallery","id"],"sources":["H:/Svetik/qa-testing/Scandiweb/volkotrub-shop-project/src/pages/AllCategories.js"],"sourcesContent":["import { PureComponent} from \"react\";\r\nimport { gql, ApolloClient, InMemoryCache } from '@apollo/client';\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.div`\r\n  font-size: 42px;\r\n  font-weight: 400;\r\n  line-height: 160%;\r\n  color: #1D1F22;\r\n  margin-left: 100px;\r\n  text-align: left;\r\n`;\r\nconst ContainerProductList = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin: 0px 100px 190px 100px;\r\n  \r\n`;\r\n\r\n\r\n\r\nclass AllCategories extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n        data: [],\r\n        loading: false,\r\n        error: null,\r\n        };\r\n    }\r\n    fetchAll = () => {\r\n        const client = new ApolloClient({\r\n  uri: 'http://localhost:4000/',\r\n  cache: new InMemoryCache(),\r\n        });\r\n        const GET_ALL = gql`\r\n        query Query {\r\n  category(input: { title: \"all\" }) {\r\n    name\r\n    \r\n    products {\r\n      id\r\n      \r\n      name\r\n      inStock\r\n      gallery\r\n      description\r\n      category\r\n      attributes {\r\n        id\r\n        \r\n        name\r\n        type\r\n        items {\r\n          displayValue\r\n          \r\n          value\r\n          id\r\n        }\r\n      }\r\n      prices {\r\n        currency {\r\n          symbol\r\n          \r\n          label\r\n        }\r\n        amount\r\n        \r\n      }\r\n      brand\r\n    }\r\n  }\r\n  currencies {\r\n    label\r\n    \r\n    symbol\r\n  }\r\n} `;\r\n        client.query({ query: GET_ALL }).then((result) => {\r\n            console.log(result);\r\n            this.setState({ data: result.data.category.products, loading: false });\r\n            },\r\n            (error) => {\r\n            this.setState({loading:true,error:error})\r\n        });\r\n    }\r\n \r\n    \r\n    componentDidMount() {\r\n        this.setState({ loading: true });\r\n        this.fetchAll();\r\n        }\r\n        \r\n    \r\nrender() {\r\n   const { data, loading, error } = this.state;\r\n    if (error) {\r\n      return <p>Something went wrong</p>;\r\n    }\r\n\r\n    if (loading) {\r\n      return <p>Loading ...</p>;\r\n    }\r\n    if(data !== [])\r\n    {\r\n      return (\r\n      <>\r\n      <Header>All products</Header>\r\n      <ul>\r\n        {data.map(product =>\r\n            <li key={product.id}>\r\n                <h4>{product.name}</h4>\r\n\r\n                <img src={product.gallery[0]} alt=\" product\" />\r\n                \r\n          </li>\r\n        )}\r\n          </ul>\r\n          </>\r\n    );\r\n    } else { this.fetchAll(); return \"Loading...\"; }\r\n    }\r\n};\r\n\r\nexport default AllCategories;\r\n\r\n//               query Query($input: CategoryInput) {\r\n//   category(input: { title: \"all\" }) {\r\n//     name\r\n//     __typename @skip(if: true)\r\n//     products {\r\n//       id\r\n//       __typename @skip(if: true)\r\n//       name\r\n//       inStock\r\n//       gallery\r\n//       description\r\n//       category\r\n//       attributes {\r\n//         id\r\n//         __typename @skip(if: true)\r\n//         name\r\n//         type\r\n//         items {\r\n//           displayValue\r\n//           __typename @skip(if: true)\r\n//           value\r\n//           id\r\n//         }\r\n//       }\r\n//       prices {\r\n//         currency {\r\n//           symbol\r\n//           __typename @skip(if: true)\r\n//           label\r\n//         }\r\n//         amount\r\n//         __typename @skip(if: true)\r\n//       }\r\n//       brand\r\n//     }\r\n//   }\r\n//   currencies {\r\n//     label\r\n//     __typename @skip(if: true)\r\n//     symbol\r\n//   }\r\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module"}