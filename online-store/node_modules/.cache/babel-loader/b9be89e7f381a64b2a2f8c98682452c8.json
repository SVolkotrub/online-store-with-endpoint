{"ast":null,"code":"import { gql, ApolloClient, InMemoryCache } from '@apollo/client';\nexport default function getProductsByCategory(props) {\n  const client = new ApolloClient({\n    uri: 'http://localhost:4000/',\n    cache: new InMemoryCache()\n  }); //   const GET_PRODUCT = gql`\n  //         query Query {\n  //   product(id: \"${props.id}\") {\n  //     id\n  //     name\n  //     inStock\n  //     gallery\n  //     description\n  //     category\n  //     attributes {\n  //       items {\n  //         id\n  //         value\n  //         displayValue\n  //       }\n  //       type\n  //       name\n  //       id\n  //     }\n  //     prices {\n  //       amount\n  //       currency {\n  //         label\n  //         symbol\n  //       }\n  //     }\n  //     brand\n  //   }\n  // } `;\n\n  async function fetchData() {\n    let result = await client.query({\n      query: GET_PRODUCT\n    }).then(result => {\n      return result;\n    }).catch(error => {\n      console.log(\"Something went wrong in response\");\n    });\n    return result.data.product;\n  }\n\n  const response = fetchData();\n  return response;\n}","map":{"version":3,"names":["gql","ApolloClient","InMemoryCache","getProductsByCategory","props","client","uri","cache","fetchData","result","query","GET_PRODUCT","then","catch","error","console","log","data","product","response"],"sources":["H:/Svetik/qa-testing/Scandiweb/volkotrub-shop-project/src/other-components-and-functions/getProductById.js"],"sourcesContent":["import { gql, ApolloClient, InMemoryCache } from '@apollo/client';\r\n\r\nexport default function getProductsByCategory(props) {\r\n    const client = new ApolloClient({\r\n  uri: 'http://localhost:4000/',\r\n  cache: new InMemoryCache(),\r\n    });\r\n//   const GET_PRODUCT = gql`\r\n//         query Query {\r\n//   product(id: \"${props.id}\") {\r\n//     id\r\n//     name\r\n//     inStock\r\n//     gallery\r\n//     description\r\n//     category\r\n//     attributes {\r\n//       items {\r\n//         id\r\n//         value\r\n//         displayValue\r\n//       }\r\n//       type\r\n//       name\r\n//       id\r\n//     }\r\n//     prices {\r\n//       amount\r\n//       currency {\r\n//         label\r\n//         symbol\r\n//       }\r\n//     }\r\n//     brand\r\n//   }\r\n// } `;\r\n   \r\n    async function fetchData() {\r\n        \r\n      let result = await client.query({ query: GET_PRODUCT }).then((result) => {\r\n                return result;\r\n            }).catch((error) => {\r\n                console.log(\"Something went wrong in response\");\r\n            });\r\n            \r\n        return result.data.product; \r\n        \r\n    }\r\n const response = fetchData();\r\n    return response;\r\n}"],"mappings":"AAAA,SAASA,GAAT,EAAcC,YAAd,EAA4BC,aAA5B,QAAiD,gBAAjD;AAEA,eAAe,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;EACjD,MAAMC,MAAM,GAAG,IAAIJ,YAAJ,CAAiB;IAClCK,GAAG,EAAE,wBAD6B;IAElCC,KAAK,EAAE,IAAIL,aAAJ;EAF2B,CAAjB,CAAf,CADiD,CAKrD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEI,eAAeM,SAAf,GAA2B;IAEzB,IAAIC,MAAM,GAAG,MAAMJ,MAAM,CAACK,KAAP,CAAa;MAAEA,KAAK,EAAEC;IAAT,CAAb,EAAqCC,IAArC,CAA2CH,MAAD,IAAY;MAC/D,OAAOA,MAAP;IACH,CAFY,EAEVI,KAFU,CAEHC,KAAD,IAAW;MAChBC,OAAO,CAACC,GAAR,CAAY,kCAAZ;IACH,CAJY,CAAnB;IAME,OAAOP,MAAM,CAACQ,IAAP,CAAYC,OAAnB;EAEH;;EACJ,MAAMC,QAAQ,GAAGX,SAAS,EAA1B;EACG,OAAOW,QAAP;AACH"},"metadata":{},"sourceType":"module"}