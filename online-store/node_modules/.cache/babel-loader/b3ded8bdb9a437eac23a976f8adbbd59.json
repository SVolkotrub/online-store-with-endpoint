{"ast":null,"code":"var _jsxFileName = \"H:\\\\Svetik\\\\qa-testing\\\\Scandiweb\\\\volkotrub-shop-project\\\\src\\\\pages\\\\AllCategories.js\";\nimport { PureComponent } from \"react\";\nimport { gql, useQuery, ApolloClient, InMemoryCache } from '@apollo/client'; //    const GET_ALL = gql`\n//         query Query($input: CategoryInput) {\n//   category(input: { title: \"all\" }) {\n//     name\n//     __typename @skip(if: true)\n//     products {\n//       id\n//       __typename @skip(if: true)\n//       name\n//       inStock\n//       gallery\n//       description\n//       category\n//       attributes {\n//         id\n//         __typename @skip(if: true)\n//         name\n//         type\n//         items {\n//           displayValue\n//           __typename @skip(if: true)\n//           value\n//           id\n//         }\n//       }\n//       prices {\n//         currency {\n//           symbol\n//           __typename @skip(if: true)\n//           label\n//         }\n//         amount\n//         __typename @skip(if: true)\n//       }\n//       brand\n//     }\n//   }\n//   currencies {\n//     label\n//     __typename @skip(if: true)\n//     symbol\n//   }\n// }\n//         `;\n//     function DisplayAll() {\n//   const { loading, error, data } = useQuery(GET_ALL);\n//   if (loading) return <p>Loading...</p>;\n//   if (error) return <p>Error :(</p>;\n//         return console.log(data);\n// //   return data.locations.map(({ id, name, description, photo }) => (\n// //     <div key={id}>\n// //       <h3>{name}</h3>\n// //       <img width=\"400\" height=\"250\" alt=\"location-reference\" src={`${photo}`} />\n// //       <br />\n// //       <b>About this location:</b>\n// //       <p>{description}</p>\n// //       <br />\n// //     </div>\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass AllCategories extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      loading: false,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const client = new ApolloClient({\n      uri: 'http://localhost:4000/',\n      cache: new InMemoryCache()\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hello categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\n;\nexport default AllCategories;","map":{"version":3,"names":["PureComponent","gql","useQuery","ApolloClient","InMemoryCache","AllCategories","constructor","props","state","data","loading","error","componentDidMount","setState","client","uri","cache","render"],"sources":["H:/Svetik/qa-testing/Scandiweb/volkotrub-shop-project/src/pages/AllCategories.js"],"sourcesContent":["import { PureComponent } from \"react\";\r\nimport {  gql,useQuery, ApolloClient, InMemoryCache } from '@apollo/client';\r\n\r\n//    const GET_ALL = gql`\r\n//         query Query($input: CategoryInput) {\r\n//   category(input: { title: \"all\" }) {\r\n//     name\r\n//     __typename @skip(if: true)\r\n//     products {\r\n//       id\r\n//       __typename @skip(if: true)\r\n//       name\r\n//       inStock\r\n//       gallery\r\n//       description\r\n//       category\r\n//       attributes {\r\n//         id\r\n//         __typename @skip(if: true)\r\n//         name\r\n//         type\r\n//         items {\r\n//           displayValue\r\n//           __typename @skip(if: true)\r\n//           value\r\n//           id\r\n//         }\r\n//       }\r\n//       prices {\r\n//         currency {\r\n//           symbol\r\n//           __typename @skip(if: true)\r\n//           label\r\n//         }\r\n//         amount\r\n//         __typename @skip(if: true)\r\n//       }\r\n//       brand\r\n//     }\r\n//   }\r\n//   currencies {\r\n//     label\r\n//     __typename @skip(if: true)\r\n//     symbol\r\n//   }\r\n// }\r\n\r\n//         `;\r\n//     function DisplayAll() {\r\n//   const { loading, error, data } = useQuery(GET_ALL);\r\n\r\n//   if (loading) return <p>Loading...</p>;\r\n//   if (error) return <p>Error :(</p>;\r\n//         return console.log(data);\r\n// //   return data.locations.map(({ id, name, description, photo }) => (\r\n// //     <div key={id}>\r\n// //       <h3>{name}</h3>\r\n// //       <img width=\"400\" height=\"250\" alt=\"location-reference\" src={`${photo}`} />\r\n// //       <br />\r\n// //       <b>About this location:</b>\r\n// //       <p>{description}</p>\r\n// //       <br />\r\n// //     </div>\r\n\r\n// }\r\n\r\n\r\nclass AllCategories extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        data: [],\r\n        loading: false,\r\n        error: null,\r\n        };\r\n    }\r\n    \r\n \r\n    \r\n    componentDidMount() {\r\n        this.setState({ loading: true });\r\n        const client = new ApolloClient({\r\n  uri: 'http://localhost:4000/',\r\n  cache: new InMemoryCache(),\r\n});\r\n        }\r\n        \r\n    \r\nrender() {\r\n    \r\n\r\n    return (<> <p>Hello categories</p>\r\n        \r\n    </>)\r\n    }\r\n};\r\n\r\nexport default AllCategories;"],"mappings":";AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAAUC,GAAV,EAAcC,QAAd,EAAwBC,YAAxB,EAAsCC,aAAtC,QAA2D,gBAA3D,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AAGA,MAAMC,aAAN,SAA4BL,aAA5B,CAA0C;EACtCM,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACbC,IAAI,EAAE,EADO;MAEbC,OAAO,EAAE,KAFI;MAGbC,KAAK,EAAE;IAHM,CAAb;EAKH;;EAIDC,iBAAiB,GAAG;IAChB,KAAKC,QAAL,CAAc;MAAEH,OAAO,EAAE;IAAX,CAAd;IACA,MAAMI,MAAM,GAAG,IAAIX,YAAJ,CAAiB;MACtCY,GAAG,EAAE,wBADiC;MAEtCC,KAAK,EAAE,IAAIZ,aAAJ;IAF+B,CAAjB,CAAf;EAIC;;EAGTa,MAAM,GAAG;IAGL,oBAAQ;MAAA,6BAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAH;IAAA,gBAAR;EAGC;;AA3BqC;;AA4BzC;AAED,eAAeZ,aAAf"},"metadata":{},"sourceType":"module"}