{"ast":null,"code":"var _jsxFileName = \"H:\\\\Svetik\\\\qa-testing\\\\Scandiweb\\\\volkotrub-shop-project\\\\src\\\\pages\\\\AllCategories.js\";\nimport { PureComponent } from \"react\"; // import { gql, ApolloClient, InMemoryCache } from '@apollo/client';\n\nimport { gql } from '@apollo/client';\nimport { Query } from \"@apollo/client/react/components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GET_ALL = gql`\n        query Query {\n  category(input: { title: \"all\" }) {\n    name\n    __typename @skip(if: true)\n    products {\n      id\n      __typename @skip(if: true)\n      name\n      inStock\n      gallery\n      description\n      category\n      attributes {\n        id\n        __typename @skip(if: true)\n        name\n        type\n        items {\n          displayValue\n          __typename @skip(if: true)\n          value\n          id\n        }\n      }\n      prices {\n        currency {\n          symbol\n          __typename @skip(if: true)\n          label\n        }\n        amount\n        __typename @skip(if: true)\n      }\n      brand\n    }\n  }\n  currencies {\n    label\n    __typename @skip(if: true)\n    symbol\n  }\n}\n\n        `;\n\nconst CategoryQuery = () => {\n  return /*#__PURE__*/_jsxDEV(Query, {\n    query: GET_ALL,\n    children: _ref => {\n      let {\n        loading,\n        error,\n        data\n      } = _ref;\n\n      if (loading) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 35\n        }, this);\n      }\n\n      if (error) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 33\n        }, this);\n      }\n\n      console.log(data);\n      return /*#__PURE__*/_jsxDEV(AllCategories, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 20\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CategoryQuery;\n\nclass AllCategories extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // data: [],\n      data: this.props,\n      loading: false,\n      error: null\n    };\n  } //     componentDidMount() {\n  //         this.setState({ loading: true });\n  //         const client = new ApolloClient({\n  //   uri: 'http://localhost:4000/',\n  //   cache: new InMemoryCache(),\n  //         });\n  //         const GET_ALL = gql`\n  //         query Query {\n  //   category(input: { title: \"all\" }) {\n  //     name\n  //     products {\n  //       id\n  //       name\n  //       inStock\n  //       gallery\n  //       description\n  //       category\n  //       attributes {\n  //         id\n  //         name\n  //         type\n  //         items {\n  //           displayValue\n  //           value\n  //           id\n  //         }\n  //       }\n  //       prices {\n  //         currency {\n  //           symbol\n  //           label\n  //         }\n  //         amount\n  //       }\n  //       brand\n  //     }\n  //   }\n  //   currencies {\n  //     label\n  //     symbol\n  //   }\n  // } `;\n  //         client.query({ query: GET_ALL }).then((result) => console.log(result.data));\n  //         }\n\n\n  render() {\n    console.log(his.data);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hello categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\n;\nexport default AllCategories; //               query Query($input: CategoryInput) {\n//   category(input: { title: \"all\" }) {\n//     name\n//     __typename @skip(if: true)\n//     products {\n//       id\n//       __typename @skip(if: true)\n//       name\n//       inStock\n//       gallery\n//       description\n//       category\n//       attributes {\n//         id\n//         __typename @skip(if: true)\n//         name\n//         type\n//         items {\n//           displayValue\n//           __typename @skip(if: true)\n//           value\n//           id\n//         }\n//       }\n//       prices {\n//         currency {\n//           symbol\n//           __typename @skip(if: true)\n//           label\n//         }\n//         amount\n//         __typename @skip(if: true)\n//       }\n//       brand\n//     }\n//   }\n//   currencies {\n//     label\n//     __typename @skip(if: true)\n//     symbol\n//   }\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryQuery\");","map":{"version":3,"names":["PureComponent","gql","Query","GET_ALL","CategoryQuery","loading","error","data","console","log","AllCategories","constructor","props","state","render","his"],"sources":["H:/Svetik/qa-testing/Scandiweb/volkotrub-shop-project/src/pages/AllCategories.js"],"sourcesContent":["import { PureComponent } from \"react\";\r\n// import { gql, ApolloClient, InMemoryCache } from '@apollo/client';\r\nimport { gql } from '@apollo/client';\r\nimport { Query } from \"@apollo/client/react/components\";\r\n\r\n   const GET_ALL = gql`\r\n        query Query {\r\n  category(input: { title: \"all\" }) {\r\n    name\r\n    __typename @skip(if: true)\r\n    products {\r\n      id\r\n      __typename @skip(if: true)\r\n      name\r\n      inStock\r\n      gallery\r\n      description\r\n      category\r\n      attributes {\r\n        id\r\n        __typename @skip(if: true)\r\n        name\r\n        type\r\n        items {\r\n          displayValue\r\n          __typename @skip(if: true)\r\n          value\r\n          id\r\n        }\r\n      }\r\n      prices {\r\n        currency {\r\n          symbol\r\n          __typename @skip(if: true)\r\n          label\r\n        }\r\n        amount\r\n        __typename @skip(if: true)\r\n      }\r\n      brand\r\n    }\r\n  }\r\n  currencies {\r\n    label\r\n    __typename @skip(if: true)\r\n    symbol\r\n  }\r\n}\r\n\r\n        `;\r\n    const CategoryQuery = () =>{\r\nreturn (\r\n    <Query query={GET_ALL}>\r\n        {({ loading, error, data }) => {\r\n            if (loading) { return <p>Loading..</p> }\r\n            if (error) { return <p>Error</p> }\r\n            console.log(data);\r\n            return <AllCategories data={data} />\r\n        }}\r\n        </Query>\r\n    )\r\n}\r\n\r\n\r\nclass AllCategories extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        // data: [],\r\n            data: this.props,\r\n        loading: false,\r\n        error: null,\r\n        };\r\n    }\r\n    \r\n \r\n    \r\n//     componentDidMount() {\r\n//         this.setState({ loading: true });\r\n//         const client = new ApolloClient({\r\n//   uri: 'http://localhost:4000/',\r\n//   cache: new InMemoryCache(),\r\n//         });\r\n//         const GET_ALL = gql`\r\n//         query Query {\r\n//   category(input: { title: \"all\" }) {\r\n//     name\r\n    \r\n//     products {\r\n//       id\r\n      \r\n//       name\r\n//       inStock\r\n//       gallery\r\n//       description\r\n//       category\r\n//       attributes {\r\n//         id\r\n        \r\n//         name\r\n//         type\r\n//         items {\r\n//           displayValue\r\n          \r\n//           value\r\n//           id\r\n//         }\r\n//       }\r\n//       prices {\r\n//         currency {\r\n//           symbol\r\n          \r\n//           label\r\n//         }\r\n//         amount\r\n        \r\n//       }\r\n//       brand\r\n//     }\r\n//   }\r\n//   currencies {\r\n//     label\r\n    \r\n//     symbol\r\n//   }\r\n// } `;\r\n//         client.query({ query: GET_ALL }).then((result) => console.log(result.data));\r\n//         }\r\n        \r\n    \r\nrender() {\r\n    \r\n    console.log(his.data);\r\n    return (<> <p>Hello categories</p>\r\n        \r\n    </>)\r\n    }\r\n};\r\n\r\nexport default AllCategories;\r\n\r\n//               query Query($input: CategoryInput) {\r\n//   category(input: { title: \"all\" }) {\r\n//     name\r\n//     __typename @skip(if: true)\r\n//     products {\r\n//       id\r\n//       __typename @skip(if: true)\r\n//       name\r\n//       inStock\r\n//       gallery\r\n//       description\r\n//       category\r\n//       attributes {\r\n//         id\r\n//         __typename @skip(if: true)\r\n//         name\r\n//         type\r\n//         items {\r\n//           displayValue\r\n//           __typename @skip(if: true)\r\n//           value\r\n//           id\r\n//         }\r\n//       }\r\n//       prices {\r\n//         currency {\r\n//           symbol\r\n//           __typename @skip(if: true)\r\n//           label\r\n//         }\r\n//         amount\r\n//         __typename @skip(if: true)\r\n//       }\r\n//       brand\r\n//     }\r\n//   }\r\n//   currencies {\r\n//     label\r\n//     __typename @skip(if: true)\r\n//     symbol\r\n//   }\r\n// }"],"mappings":";AAAA,SAASA,aAAT,QAA8B,OAA9B,C,CACA;;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,SAASC,KAAT,QAAsB,iCAAtB;;;AAEG,MAAMC,OAAO,GAAGF,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SA5CG;;AA6CC,MAAMG,aAAa,GAAG,MAAK;EAC/B,oBACI,QAAC,KAAD;IAAO,KAAK,EAAED,OAAd;IAAA,UACK,QAA8B;MAAA,IAA7B;QAAEE,OAAF;QAAWC,KAAX;QAAkBC;MAAlB,CAA6B;;MAC3B,IAAIF,OAAJ,EAAa;QAAE,oBAAO;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAP;MAAyB;;MACxC,IAAIC,KAAJ,EAAW;QAAE,oBAAO;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAP;MAAqB;;MAClCE,OAAO,CAACC,GAAR,CAAYF,IAAZ;MACA,oBAAO,QAAC,aAAD;QAAe,IAAI,EAAEA;MAArB;QAAA;QAAA;QAAA;MAAA,QAAP;IACH;EANL;IAAA;IAAA;IAAA;EAAA,QADJ;AAUC,CAXG;;KAAMH,a;;AAcV,MAAMM,aAAN,SAA4BV,aAA5B,CAA0C;EACtCW,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACb;MACIN,IAAI,EAAE,KAAKK,KAFF;MAGbP,OAAO,EAAE,KAHI;MAIbC,KAAK,EAAE;IAJM,CAAb;EAMH,CATqC,CAa1C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;;;EAGAQ,MAAM,GAAG;IAELN,OAAO,CAACC,GAAR,CAAYM,GAAG,CAACR,IAAhB;IACA,oBAAQ;MAAA,6BAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAH;IAAA,gBAAR;EAGC;;AAxEqC;;AAyEzC;AAED,eAAeG,aAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}