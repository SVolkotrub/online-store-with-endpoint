{"ast":null,"code":"var _jsxFileName = \"H:\\\\Svetik\\\\qa-testing\\\\Scandiweb\\\\volkotrub-shop-project\\\\src\\\\other-components-and-functions\\\\CurrencyList.js\";\nimport { PureComponent } from \"react\";\nimport { connect } from 'react-redux';\nimport { updateCurrency, fetchCurrency } from \"../store/currency\";\nimport \"../components/header/Header.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CurrencyList extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.data = this.props.dispatch(fetchCurrency());\n\n    this.onSelectItem = (index, name) => {\n      this.setState({\n        activeItem: index,\n        currency: name\n      });\n      this.props.dispatch(updateCurrency(name));\n    };\n\n    this.state = {\n      activeItem: 0,\n      currencies: null,\n      currency: this.props.currency\n    };\n  }\n\n  componentDidMount() {\n    const response = this.props.dispatch(fetchCurrency());\n    this.setState({\n      currencies: response\n    });\n  }\n\n  render() {\n    if (this.state.currencies !== null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"currencies\",\n        children: this.state.currencies.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.state.activeItem === index ? \"currency-selected\" : \"\",\n          onClick: () => this.onSelectItem(index, item),\n          children: [\" `$\", item.symbol, \" $\", item.label, \"` \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this);\n    } else {\n      return \"Loading...\";\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currency: state.currency.currency,\n    currencies: state.currency.currencies\n  };\n}\n\n;\nexport default connect(mapStateToProps)(CurrencyList);","map":{"version":3,"names":["PureComponent","connect","updateCurrency","fetchCurrency","CurrencyList","constructor","props","data","dispatch","onSelectItem","index","name","setState","activeItem","currency","state","currencies","componentDidMount","response","render","map","item","symbol","label","mapStateToProps"],"sources":["H:/Svetik/qa-testing/Scandiweb/volkotrub-shop-project/src/other-components-and-functions/CurrencyList.js"],"sourcesContent":["import { PureComponent } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { updateCurrency, fetchCurrency } from \"../store/currency\";\r\nimport \"../components/header/Header.css\";\r\n\r\nclass CurrencyList extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeItem: 0,\r\n            currencies: null,\r\n            currency: this.props.currency,\r\n        }\r\n    }\r\n    data = this.props.dispatch(fetchCurrency());\r\n    componentDidMount() {\r\n        const response = this.props.dispatch(fetchCurrency());\r\n        this.setState({ currencies: response });\r\n    }\r\n    onSelectItem = (index, name) => {\r\n        this.setState({ activeItem: index, currency: name });\r\n        this.props.dispatch(updateCurrency(name));\r\n    };\r\n    render() {\r\n        if (this.state.currencies !== null) {\r\n            return (\r\n                <div className=\"currencies\">\r\n                    {this.state.currencies.map((item, index) => (\r\n                        <div className={this.state.activeItem === index ? \"currency-selected\" : \"\"}\r\n                            onClick={() => this.onSelectItem(index, item)}\r\n                            key={index}> `${item.symbol} ${item.label}` </div>))}\r\n                \r\n            </div>\r\n        )\r\n        } else { return \"Loading...\" }\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        currency: state.currency.currency,\r\n        currencies: state.currency.currencies,\r\n    }\r\n};\r\nexport default connect(mapStateToProps)(CurrencyList);"],"mappings":";AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,mBAA9C;AACA,OAAO,iCAAP;;;AAEA,MAAMC,YAAN,SAA2BJ,aAA3B,CAAyC;EACrCK,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IADe,KAQnBC,IARmB,GAQZ,KAAKD,KAAL,CAAWE,QAAX,CAAoBL,aAAa,EAAjC,CARY;;IAAA,KAanBM,YAbmB,GAaJ,CAACC,KAAD,EAAQC,IAAR,KAAiB;MAC5B,KAAKC,QAAL,CAAc;QAAEC,UAAU,EAAEH,KAAd;QAAqBI,QAAQ,EAAEH;MAA/B,CAAd;MACA,KAAKL,KAAL,CAAWE,QAAX,CAAoBN,cAAc,CAACS,IAAD,CAAlC;IACH,CAhBkB;;IAEf,KAAKI,KAAL,GAAa;MACTF,UAAU,EAAE,CADH;MAETG,UAAU,EAAE,IAFH;MAGTF,QAAQ,EAAE,KAAKR,KAAL,CAAWQ;IAHZ,CAAb;EAKH;;EAEDG,iBAAiB,GAAG;IAChB,MAAMC,QAAQ,GAAG,KAAKZ,KAAL,CAAWE,QAAX,CAAoBL,aAAa,EAAjC,CAAjB;IACA,KAAKS,QAAL,CAAc;MAAEI,UAAU,EAAEE;IAAd,CAAd;EACH;;EAKDC,MAAM,GAAG;IACL,IAAI,KAAKJ,KAAL,CAAWC,UAAX,KAA0B,IAA9B,EAAoC;MAChC,oBACI;QAAK,SAAS,EAAC,YAAf;QAAA,UACK,KAAKD,KAAL,CAAWC,UAAX,CAAsBI,GAAtB,CAA0B,CAACC,IAAD,EAAOX,KAAP,kBACvB;UAAK,SAAS,EAAE,KAAKK,KAAL,CAAWF,UAAX,KAA0BH,KAA1B,GAAkC,mBAAlC,GAAwD,EAAxE;UACI,OAAO,EAAE,MAAM,KAAKD,YAAL,CAAkBC,KAAlB,EAAyBW,IAAzB,CADnB;UAAA,kBAEoBA,IAAI,CAACC,MAFzB,QAEmCD,IAAI,CAACE,KAFxC;QAAA,GAESb,KAFT;UAAA;UAAA;UAAA;QAAA,QADH;MADL;QAAA;QAAA;QAAA;MAAA,QADJ;IASH,CAVD,MAUO;MAAE,OAAO,YAAP;IAAqB;EACjC;;AA9BoC;;AAgCzC,SAASc,eAAT,CAAyBT,KAAzB,EAAgC;EAC5B,OAAO;IACHD,QAAQ,EAAEC,KAAK,CAACD,QAAN,CAAeA,QADtB;IAEHE,UAAU,EAAED,KAAK,CAACD,QAAN,CAAeE;EAFxB,CAAP;AAIH;;AAAA;AACD,eAAef,OAAO,CAACuB,eAAD,CAAP,CAAyBpB,YAAzB,CAAf"},"metadata":{},"sourceType":"module"}