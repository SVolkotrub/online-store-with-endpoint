{"ast":null,"code":"var _jsxFileName = \"H:\\\\Svetik\\\\qa-testing\\\\Scandiweb\\\\volkotrub-shop-project\\\\src\\\\pages\\\\AllCategories.js\",\n    _s = $RefreshSig$();\n\nimport { PureComponent } from \"react\";\nimport { gql, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_ALL = gql`\n        query Query($input: CategoryInput) {\n  category(input: { title: \"all\" }) {\n    name\n    __typename @skip(if: true)\n    products {\n      id\n      __typename @skip(if: true)\n      name\n      inStock\n      gallery\n      description\n      category\n      attributes {\n        id\n        __typename @skip(if: true)\n        name\n        type\n        items {\n          displayValue\n          __typename @skip(if: true)\n          value\n          id\n        }\n      }\n      prices {\n        currency {\n          symbol\n          __typename @skip(if: true)\n          label\n        }\n        amount\n        __typename @skip(if: true)\n      }\n      brand\n    }\n  }\n  currencies {\n    label\n    __typename @skip(if: true)\n    symbol\n  }\n}\n\n        `;\n\nfunction DisplayAll() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ALL);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 21\n  }, this);\n  return console.log(data); //   return data.locations.map(({ id, name, description, photo }) => (\n  //     <div key={id}>\n  //       <h3>{name}</h3>\n  //       <img width=\"400\" height=\"250\" alt=\"location-reference\" src={`${photo}`} />\n  //       <br />\n  //       <b>About this location:</b>\n  //       <p>{description}</p>\n  //       <br />\n  //     </div>\n}\n\n_s(DisplayAll, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = DisplayAll;\n\nclass AllCategories extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      loading: false,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n  }\n\n  render() {\n    return \"Hello categories\";\n  }\n\n}\n\n;\nexport default AllCategories;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayAll\");","map":{"version":3,"names":["PureComponent","gql","useQuery","GET_ALL","DisplayAll","loading","error","data","console","log","AllCategories","constructor","props","state","componentDidMount","setState","render"],"sources":["H:/Svetik/qa-testing/Scandiweb/volkotrub-shop-project/src/pages/AllCategories.js"],"sourcesContent":["import { PureComponent } from \"react\";\r\nimport {  gql,useQuery } from '@apollo/client';\r\n\r\n   const GET_ALL = gql`\r\n        query Query($input: CategoryInput) {\r\n  category(input: { title: \"all\" }) {\r\n    name\r\n    __typename @skip(if: true)\r\n    products {\r\n      id\r\n      __typename @skip(if: true)\r\n      name\r\n      inStock\r\n      gallery\r\n      description\r\n      category\r\n      attributes {\r\n        id\r\n        __typename @skip(if: true)\r\n        name\r\n        type\r\n        items {\r\n          displayValue\r\n          __typename @skip(if: true)\r\n          value\r\n          id\r\n        }\r\n      }\r\n      prices {\r\n        currency {\r\n          symbol\r\n          __typename @skip(if: true)\r\n          label\r\n        }\r\n        amount\r\n        __typename @skip(if: true)\r\n      }\r\n      brand\r\n    }\r\n  }\r\n  currencies {\r\n    label\r\n    __typename @skip(if: true)\r\n    symbol\r\n  }\r\n}\r\n\r\n        `;\r\n    function DisplayAll() {\r\n  const { loading, error, data } = useQuery(GET_ALL);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n        return console.log(data);\r\n//   return data.locations.map(({ id, name, description, photo }) => (\r\n//     <div key={id}>\r\n//       <h3>{name}</h3>\r\n//       <img width=\"400\" height=\"250\" alt=\"location-reference\" src={`${photo}`} />\r\n//       <br />\r\n//       <b>About this location:</b>\r\n//       <p>{description}</p>\r\n//       <br />\r\n//     </div>\r\n\r\n}\r\n\r\nclass AllCategories extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        data: [],\r\n        loading: false,\r\n        error: null,\r\n        };\r\n    }\r\n    \r\n \r\n    \r\n    componentDidMount() {\r\n        this.setState({ loading: true });\r\n     \r\n        }\r\n        \r\n    \r\nrender() {\r\n    \r\n\r\n    return \"Hello categories\";\r\n    }\r\n};\r\n\r\nexport default AllCategories;"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAAUC,GAAV,EAAcC,QAAd,QAA8B,gBAA9B;;AAEG,MAAMC,OAAO,GAAGF,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SA5CG;;AA6CC,SAASG,UAAT,GAAsB;EAAA;;EACxB,MAAM;IAAEC,OAAF;IAAWC,KAAX;IAAkBC;EAAlB,IAA2BL,QAAQ,CAACC,OAAD,CAAzC;EAEA,IAAIE,OAAJ,EAAa,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EACb,IAAIC,KAAJ,EAAW,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EACL,OAAOE,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAP,CALkB,CAM1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAEC;;GAhBYH,U;UACsBF,Q;;;KADtBE,U;;AAkBb,MAAMM,aAAN,SAA4BV,aAA5B,CAA0C;EACtCW,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACbN,IAAI,EAAE,EADO;MAEbF,OAAO,EAAE,KAFI;MAGbC,KAAK,EAAE;IAHM,CAAb;EAKH;;EAIDQ,iBAAiB,GAAG;IAChB,KAAKC,QAAL,CAAc;MAAEV,OAAO,EAAE;IAAX,CAAd;EAEC;;EAGTW,MAAM,GAAG;IAGL,OAAO,kBAAP;EACC;;AAtBqC;;AAuBzC;AAED,eAAeN,aAAf"},"metadata":{},"sourceType":"module"}