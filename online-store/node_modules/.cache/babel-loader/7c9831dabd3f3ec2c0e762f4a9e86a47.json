{"ast":null,"code":"var _jsxFileName = \"H:\\\\Svetik\\\\qa-testing\\\\Scandiweb\\\\volkotrub-shop-project\\\\src\\\\pages\\\\ProductPage.js\";\nimport { PureComponent } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Interweave } from 'interweave';\nimport getProductById from \"../other-components-and-functions/getProductById\";\nimport styled from \"styled-components\";\nimport { connect } from 'react-redux';\nimport \"./ProductPage.css\";\nimport { addProductToCart } from \"../store/cart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FilterColor = styled.div`\nwidth: 32px;\nheight: 32px;\ncursor: pointer;\nbackground-color: ${props => props.color};\n${props => props.selected ? `outline-offset: 1px; outline: 1px solid #5ECE7B` : `none`};\n`;\n_c = FilterColor;\n\nfunction withParams(Component) {\n  var _s = $RefreshSig$();\n\n  return _s(props => {\n    _s();\n\n    return /*#__PURE__*/_jsxDEV(Component, { ...props,\n      params: useParams()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 19\n    }, this);\n  }, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n    return [useParams];\n  });\n}\n\nclass ProductPage extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      product: [],\n      loading: false,\n      error: null,\n      currency: this.props.currency,\n      prices: [],\n      gallery: [],\n      attributes: [],\n      amount: null,\n      toggleImage: 0,\n      itemSelected: 0,\n      colorFlag: false,\n      selectedColor: 0\n    };\n    this.getPrice = this.getPrice.bind(this);\n    this.controlSelect = this.controlSelect.bind(this);\n    this.addToCart = this.addToCart.bind(this);\n  }\n\n  getPrice() {\n    this.state.prices.map(item => {\n      if (item.currency.symbol === this.props.currency) {\n        return this.setState({\n          amount: item.amount\n        });\n      } else {\n        return null;\n      }\n    });\n  }\n\n  async fetchData(props) {\n    let productRequest = await getProductById(this.props);\n    this.setState({\n      prices: productRequest.prices\n    });\n    this.getPrice(); // const gallery = Object.values(productRequest.gallery);\n    // const attributes = Object.values(productRequest.attributes);\n    // const gallery = [];\n    // const attributes = [];\n    // Object.assign(gallery, productRequest.gallery);\n    // Object.assign(attributes, productRequest.attributes);\n\n    return this.setState({\n      product: productRequest,\n      gallery: productRequest.gallery,\n      attributes: productRequest.attributes,\n      loading: false\n    });\n  }\n\n  componentDidMount() {\n    let {\n      id\n    } = this.props.params;\n    console.log(id);\n    this.setState({\n      loading: true\n    });\n    this.fetchData(id);\n  }\n\n  componentDidUpdate(props, state) {\n    if (this.state.currency !== this.props.currency) {\n      this.setState({\n        currency: this.props.currency\n      });\n      this.getPrice();\n    }\n  }\n\n  controlSelect(index) {\n    if (this.state.selectedColor === index) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  addToCart(product) {\n    const selectedProduct = {\n      product: product,\n      quantity: 1,\n      price: this.state.amount\n    };\n    this.props.dispatch(addProductToCart({\n      selectedProduct\n    }));\n  }\n\n  render() {\n    const {\n      product,\n      loading,\n      error,\n      amount,\n      gallery,\n      toggleImage,\n      attributes\n    } = this.state;\n    console.log(product);\n    console.log(attributes);\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Something went wrong\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (product !== null && amount !== null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"small-image-wrapper\",\n          children: gallery.map((img, index) => {\n            return /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"small-image\",\n              src: img,\n              alt: \"prod\",\n              onClick: () => {\n                this.setState({\n                  toggleImage: index\n                });\n              }\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"big-image\",\n          src: gallery[toggleImage],\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"brand\",\n            children: product.brand\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"name\",\n            children: [product.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), attributes.map((obj, index) => {\n            let attributeName = obj.name;\n            this.setState({\n              [attributeName]: 5\n            });\n\n            if (obj.type !== \"swatch\") {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"attribute-name\",\n                  children: [obj.name, \":\"]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"attribute-item-container\",\n                  children: obj.items.map((item, index) => {\n                    console.log(item, this.state[attributeName]);\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: this.state[attributeName] === index ? \"attribute-item-selected\" : \"attribute-item\",\n                      onClick: () => {\n                        this.setState({\n                          [attributeName]: index\n                        });\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: item.value\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 123,\n                        columnNumber: 119\n                      }, this)\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 53\n                    }, this) // <div key={index} className={this.state.itemSelected === index ? \"attribute-item-selected\" : \"attribute-item\"}\n                    //     onClick={() => { const updateAttributeArray = this.state.selectedAttributes.splice(index, 0, index); this.setState({ itemSelected: index, selectedAttributes: updateAttributeArray }) }}>\n                    //     <p>{item.value}</p></div>\n                    ;\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true);\n            } else {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"attribute-name\",\n                  children: [obj.name, \":\"]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"attribute-color-container\",\n                  children: obj.items.map((item, index) => {\n                    return /*#__PURE__*/_jsxDEV(FilterColor, {\n                      color: item.value,\n                      selected: this.controlSelect(index),\n                      onClick: () => {\n                        this.setState({\n                          selectedColor: index\n                        });\n                      }\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 53\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true);\n            }\n          }), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"attribute-name\",\n            children: \"Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"price\",\n            children: [this.props.currency, \" \", amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-style\",\n            onClick: () => this.addToCart(product),\n            children: \"Add to cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"description\",\n            children: /*#__PURE__*/_jsxDEV(Interweave, {\n              content: product.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this);\n    } else {\n      return \"Loading...\";\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currency: state.currency.currency\n  };\n}\n\n;\nexport default connect(mapStateToProps)(withParams(ProductPage));\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterColor\");","map":{"version":3,"names":["PureComponent","useParams","Interweave","getProductById","styled","connect","addProductToCart","FilterColor","div","props","color","selected","withParams","Component","ProductPage","constructor","state","product","loading","error","currency","prices","gallery","attributes","amount","toggleImage","itemSelected","colorFlag","selectedColor","getPrice","bind","controlSelect","addToCart","map","item","symbol","setState","fetchData","productRequest","componentDidMount","id","params","console","log","componentDidUpdate","index","selectedProduct","quantity","price","dispatch","render","img","brand","name","obj","attributeName","type","items","value","description","mapStateToProps"],"sources":["H:/Svetik/qa-testing/Scandiweb/volkotrub-shop-project/src/pages/ProductPage.js"],"sourcesContent":["import { PureComponent } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Interweave } from 'interweave';\r\nimport getProductById from \"../other-components-and-functions/getProductById\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from 'react-redux';\r\nimport \"./ProductPage.css\";\r\nimport { addProductToCart } from \"../store/cart\";\r\n\r\n\r\nconst FilterColor = styled.div`\r\nwidth: 32px;\r\nheight: 32px;\r\ncursor: pointer;\r\nbackground-color: ${props => props.color};\r\n${props => props.selected ? `outline-offset: 1px; outline: 1px solid #5ECE7B` : `none`};\r\n`;\r\n\r\nfunction withParams(Component) {\r\n  return props => <Component {...props} params={useParams()} />;\r\n}\r\n\r\nclass ProductPage extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            product: [],\r\n            loading: false,\r\n            error: null,\r\n            currency: this.props.currency,\r\n            prices: [],\r\n            gallery: [],\r\n            attributes: [],\r\n            amount: null,\r\n            toggleImage: 0,\r\n            itemSelected: 0,\r\n            colorFlag: false,\r\n            selectedColor: 0, \r\n        };\r\n        this.getPrice = this.getPrice.bind(this);\r\n        this.controlSelect = this.controlSelect.bind(this);\r\n        this.addToCart = this.addToCart.bind(this);\r\n    } \r\n    getPrice() { \r\n        this.state.prices.map((item) => {\r\n            if (item.currency.symbol === this.props.currency) {\r\n                return this.setState({ amount: item.amount});\r\n            } else { return null; }\r\n        })\r\n    }\r\n    async fetchData(props) {\r\n        let productRequest = await getProductById(this.props);\r\n        this.setState({ prices: productRequest.prices });\r\n        this.getPrice();\r\n       \r\n        // const gallery = Object.values(productRequest.gallery);\r\n        // const attributes = Object.values(productRequest.attributes);\r\n        // const gallery = [];\r\n        // const attributes = [];\r\n        // Object.assign(gallery, productRequest.gallery);\r\n        // Object.assign(attributes, productRequest.attributes);\r\n\r\n        return  this.setState({ product: productRequest, gallery: productRequest.gallery, attributes: productRequest.attributes, loading: false });\r\n    }\r\n    componentDidMount() {\r\n        let { id } = this.props.params;\r\n        console.log(id);\r\n        this.setState({ loading: true });\r\n        this.fetchData(id);\r\n    }\r\n    componentDidUpdate(props, state) {\r\n     if (this.state.currency !== this.props.currency) {\r\n        this.setState({ currency: this.props.currency });\r\n        this.getPrice();\r\n    }\r\n  }\r\n    controlSelect(index) {\r\n        if (this.state.selectedColor === index) {\r\n            return true;\r\n        } else { return false; }\r\n    }\r\n    addToCart(product) {\r\n        const selectedProduct={product: product, quantity: 1, price: this.state.amount }\r\n        this.props.dispatch(addProductToCart({ selectedProduct }));\r\n    }\r\n    render() {\r\n        const { product, loading, error, amount, gallery,toggleImage, attributes } = this.state;\r\n        console.log(product);\r\n        console.log(attributes);\r\n\r\n        if (error) {\r\n            return <p>Something went wrong</p>;\r\n        }\r\n\r\n        if (loading) {\r\n            return <p>Loading ...</p>;\r\n        }\r\n        if (product !== null && amount !== null) {\r\n            return (\r\n                \r\n                <div className=\"product-container\">\r\n                    <div className=\"small-image-wrapper\">\r\n                        {gallery.map((img, index) => {\r\n                                return <img className=\"small-image\" src={img} key={index} alt=\"prod\" onClick={() => {this.setState({toggleImage: index})}} />                            \r\n                        })}\r\n                    </div>\r\n                    <img className=\"big-image\" src={gallery[toggleImage]} alt=\"\"/>\r\n                    <div className=\"content-block\">\r\n                        <p className=\"brand\">{product.brand}</p>\r\n                        <p className=\"name\">{product.name} </p>\r\n                        {attributes.map((obj, index) => {\r\n                            let attributeName = obj.name;\r\n                            this.setState({ [attributeName]: 5 });\r\n                            if (obj.type !== \"swatch\") {\r\n                                return (\r\n                                    <>\r\n                                        <p key={index} className=\"attribute-name\">{obj.name}:</p>\r\n                                        <div className=\"attribute-item-container\">\r\n                                            {obj.items.map((item, index) => {\r\n                                                console.log(item, this.state[attributeName]);\r\n                                                return (\r\n                                                    <div key={index} className={this.state[attributeName] === index ? \"attribute-item-selected\" : \"attribute-item\"} \r\n                                                        onClick={() => { this.setState({ [attributeName]: index }) }}><p>{item.value}</p></div>\r\n                                                    // <div key={index} className={this.state.itemSelected === index ? \"attribute-item-selected\" : \"attribute-item\"}\r\n                                                    //     onClick={() => { const updateAttributeArray = this.state.selectedAttributes.splice(index, 0, index); this.setState({ itemSelected: index, selectedAttributes: updateAttributeArray }) }}>\r\n                                                    //     <p>{item.value}</p></div>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    </>\r\n                                );\r\n                            } else {\r\n                                return (\r\n                                <>\r\n                                        <p key={index} className=\"attribute-name\">{obj.name}:</p>\r\n                                        <div className=\"attribute-color-container\">\r\n                                            {obj.items.map((item, index) => {   \r\n                                            \r\n                                                return (\r\n                                                    <FilterColor key={index} color={ item.value} selected={this.controlSelect(index)} onClick={()=>{this.setState({selectedColor: index})}} />\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    </>\r\n                                )\r\n                            }\r\n                        })}                        \r\n                        <p className=\"attribute-name\">Price:</p>\r\n                        <p className=\"price\">{this.props.currency} {amount }</p>\r\n                        <button className=\"button-style\" onClick={()=> this.addToCart(product) }>Add to cart</button>\r\n                        <p className=\"description\"><Interweave content={product.description} /></p>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return \"Loading...\";\r\n        }\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n      currency: state.currency.currency, \r\n  }\r\n};\r\nexport default connect(mapStateToProps)(withParams(ProductPage));"],"mappings":"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"},"metadata":{},"sourceType":"module"}