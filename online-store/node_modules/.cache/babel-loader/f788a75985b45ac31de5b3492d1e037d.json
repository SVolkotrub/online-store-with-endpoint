{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { gql, ApolloClient, InMemoryCache } from '@apollo/client';\nexport const fetchCurrency = createAsyncThunk(\"currency/fetchCurrency\", async function (_, _ref) {\n  let {\n    rejectWithValue\n  } = _ref;\n\n  try {\n    const client = new ApolloClient({\n      uri: 'http://localhost:4000/',\n      cache: new InMemoryCache()\n    });\n    const GET_CURRENCY = gql`\n             query Query {\n                currencies {\n                    label\n                    symbol\n                }\n            }`;\n    const response = await client.query({\n      query: GET_CURRENCY\n    }).then(result => {\n      console.log(response.data);\n      return response.data;\n    }).catch(error => {\n      console.log(\"Something went wrong in response\");\n    });\n  } catch {}\n});\nexport const currencySlice = createSlice({\n  name: \"currency\",\n  initialState: {\n    currency: \"USD\"\n  },\n  reducers: {\n    updateCurrency: (state, action) => {\n      state.currency = action.payload;\n    }\n  },\n  extraReducers: {\n    [fetchCurrency.pending]: (state, action) => {}\n  }\n});\nexport const {\n  updateCurrency\n} = currencySlice.actions;\nexport default currencySlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","gql","ApolloClient","InMemoryCache","fetchCurrency","_","rejectWithValue","client","uri","cache","GET_CURRENCY","response","query","then","result","console","log","data","catch","error","currencySlice","name","initialState","currency","reducers","updateCurrency","state","action","payload","extraReducers","pending","actions","reducer"],"sources":["H:/Svetik/qa-testing/Scandiweb/volkotrub-shop-project/src/store/currency.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { gql, ApolloClient, InMemoryCache } from '@apollo/client';\r\n\r\nexport const fetchCurrency = createAsyncThunk(\r\n    \"currency/fetchCurrency\",\r\n    async function (_, { rejectWithValue }) {\r\n        try {\r\n            const client = new ApolloClient({ uri: 'http://localhost:4000/', cache: new InMemoryCache(), });\r\n            const GET_CURRENCY = gql`\r\n             query Query {\r\n                currencies {\r\n                    label\r\n                    symbol\r\n                }\r\n            }`;\r\n            const response = await client.query({ query: GET_CURRENCY }).then((result) => {\r\n                console.log(response.data);\r\n                return response.data;\r\n            }).catch((error) => { console.log(\"Something went wrong in response\"); });\r\n        } catch { }\r\n    }\r\n);\r\n\r\n\r\nexport const currencySlice = createSlice({\r\n    name: \"currency\",\r\n    initialState: {\r\n        currency: \"USD\",\r\n    },\r\n    reducers: {\r\n        updateCurrency: (state, action) => {\r\n            state.currency = action.payload;  \r\n       }\r\n    },\r\n    extraReducers: {\r\n        [fetchCurrency.pending]: (state, action) => { },\r\n        \r\n    }\r\n});\r\n\r\nexport const { updateCurrency } = currencySlice.actions;\r\n\r\nexport default currencySlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,SAASC,GAAT,EAAcC,YAAd,EAA4BC,aAA5B,QAAiD,gBAAjD;AAEA,OAAO,MAAMC,aAAa,GAAGJ,gBAAgB,CACzC,wBADyC,EAEzC,gBAAgBK,CAAhB,QAAwC;EAAA,IAArB;IAAEC;EAAF,CAAqB;;EACpC,IAAI;IACA,MAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;MAAEM,GAAG,EAAE,wBAAP;MAAiCC,KAAK,EAAE,IAAIN,aAAJ;IAAxC,CAAjB,CAAf;IACA,MAAMO,YAAY,GAAGT,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA,cANY;IAOA,MAAMU,QAAQ,GAAG,MAAMJ,MAAM,CAACK,KAAP,CAAa;MAAEA,KAAK,EAAEF;IAAT,CAAb,EAAsCG,IAAtC,CAA4CC,MAAD,IAAY;MAC1EC,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACM,IAArB;MACA,OAAON,QAAQ,CAACM,IAAhB;IACH,CAHsB,EAGpBC,KAHoB,CAGbC,KAAD,IAAW;MAAEJ,OAAO,CAACC,GAAR,CAAY,kCAAZ;IAAkD,CAHjD,CAAvB;EAIH,CAbD,CAaE,MAAM,CAAG;AACd,CAjBwC,CAAtC;AAqBP,OAAO,MAAMI,aAAa,GAAGrB,WAAW,CAAC;EACrCsB,IAAI,EAAE,UAD+B;EAErCC,YAAY,EAAE;IACVC,QAAQ,EAAE;EADA,CAFuB;EAKrCC,QAAQ,EAAE;IACNC,cAAc,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC/BD,KAAK,CAACH,QAAN,GAAiBI,MAAM,CAACC,OAAxB;IACJ;EAHM,CAL2B;EAUrCC,aAAa,EAAE;IACX,CAACzB,aAAa,CAAC0B,OAAf,GAAyB,CAACJ,KAAD,EAAQC,MAAR,KAAmB,CAAG;EADpC;AAVsB,CAAD,CAAjC;AAgBP,OAAO,MAAM;EAAEF;AAAF,IAAqBL,aAAa,CAACW,OAAzC;AAEP,eAAeX,aAAa,CAACY,OAA7B"},"metadata":{},"sourceType":"module"}