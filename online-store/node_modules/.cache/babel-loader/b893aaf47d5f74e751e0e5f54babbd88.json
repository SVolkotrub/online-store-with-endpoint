{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    products: [],\n    quantity: 0,\n    total: 0\n  },\n  reducers: {\n    addProductToCart: (state, action) => {\n      state.quantity += 1;\n      state.products.push(action.payload);\n    },\n    changeProductQuantity: (state, action) => {\n      state.quantity += 1;\n      state.products[action.payload].productQuantity += 1;\n    },\n    decreaseProductQuantity: (state, action) => {\n      state.quantity -= 1;\n      state.products[action.payload].productQuantity -= 1;\n    },\n    updateAttributeIndex: (state, action) => {\n      state.products[action.payload.productIndex].selectedAttributes[action.payload.indexAttribute][1] = action.payload.index;\n    },\n    deleteProduct: (state, action) => {\n      state.quantity -= 1;\n      state.products.splice([action.payload], 1);\n    },\n    getTotalPrice: state => {\n      state.total = this.props.cartProducts.map((product, index) => {\n        return product.prices.filter(el => el.currency.symbol === this.props.currency).reduce((total, item) => total + item.amount * product.productQuantity, 0);\n      });\n    }\n  }\n});\nexport const {\n  addProductToCart,\n  deleteProduct,\n  changeProductQuantity,\n  decreaseProductQuantity,\n  updateAttributeIndex,\n  getTotalPrice\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","products","quantity","total","reducers","addProductToCart","state","action","push","payload","changeProductQuantity","productQuantity","decreaseProductQuantity","updateAttributeIndex","productIndex","selectedAttributes","indexAttribute","index","deleteProduct","splice","getTotalPrice","props","cartProducts","map","product","prices","filter","el","currency","symbol","reduce","item","amount","actions","reducer"],"sources":["H:/Svetik/qa-testing/Scandiweb/volkotrub-shop-project/src/store/cart.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n    name: \"cart\",\r\n    initialState: {\r\n        products: [],\r\n        quantity: 0,\r\n        total: 0,\r\n    },\r\n    reducers: {\r\n        addProductToCart: (state, action) => {\r\n            state.quantity += 1;\r\n            state.products.push(action.payload);\r\n        },\r\n        changeProductQuantity: (state, action) => {\r\n            state.quantity += 1;\r\n            state.products[action.payload].productQuantity += 1;\r\n        },\r\n        decreaseProductQuantity: (state, action) => {\r\n            state.quantity -= 1;\r\n            state.products[action.payload].productQuantity -= 1;\r\n        },\r\n        updateAttributeIndex: (state, action) => {\r\n            \r\n            state.products[action.payload.productIndex].selectedAttributes[action.payload.indexAttribute][1] = action.payload.index;\r\n        },\r\n        deleteProduct: (state, action) => {\r\n            state.quantity -= 1;\r\n            state.products.splice([action.payload], 1);  \r\n        },\r\n        getTotalPrice: (state) => {\r\n           state.total = this.props.cartProducts.map((product, index) => {\r\n           return  product.prices.filter(el => el.currency.symbol === this.props.currency).reduce((total, item) => total + (item.amount * product.productQuantity), 0)\r\n        });\r\n        }\r\n    }\r\n});\r\n\r\nexport const { addProductToCart, deleteProduct,changeProductQuantity,decreaseProductQuantity,updateAttributeIndex, getTotalPrice } = cartSlice.actions;\r\nexport default cartSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,MADoB;EAE1BC,YAAY,EAAE;IACVC,QAAQ,EAAE,EADA;IAEVC,QAAQ,EAAE,CAFA;IAGVC,KAAK,EAAE;EAHG,CAFY;EAO1BC,QAAQ,EAAE;IACNC,gBAAgB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACjCD,KAAK,CAACJ,QAAN,IAAkB,CAAlB;MACAI,KAAK,CAACL,QAAN,CAAeO,IAAf,CAAoBD,MAAM,CAACE,OAA3B;IACH,CAJK;IAKNC,qBAAqB,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;MACtCD,KAAK,CAACJ,QAAN,IAAkB,CAAlB;MACAI,KAAK,CAACL,QAAN,CAAeM,MAAM,CAACE,OAAtB,EAA+BE,eAA/B,IAAkD,CAAlD;IACH,CARK;IASNC,uBAAuB,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;MACxCD,KAAK,CAACJ,QAAN,IAAkB,CAAlB;MACAI,KAAK,CAACL,QAAN,CAAeM,MAAM,CAACE,OAAtB,EAA+BE,eAA/B,IAAkD,CAAlD;IACH,CAZK;IAaNE,oBAAoB,EAAE,CAACP,KAAD,EAAQC,MAAR,KAAmB;MAErCD,KAAK,CAACL,QAAN,CAAeM,MAAM,CAACE,OAAP,CAAeK,YAA9B,EAA4CC,kBAA5C,CAA+DR,MAAM,CAACE,OAAP,CAAeO,cAA9E,EAA8F,CAA9F,IAAmGT,MAAM,CAACE,OAAP,CAAeQ,KAAlH;IACH,CAhBK;IAiBNC,aAAa,EAAE,CAACZ,KAAD,EAAQC,MAAR,KAAmB;MAC9BD,KAAK,CAACJ,QAAN,IAAkB,CAAlB;MACAI,KAAK,CAACL,QAAN,CAAekB,MAAf,CAAsB,CAACZ,MAAM,CAACE,OAAR,CAAtB,EAAwC,CAAxC;IACH,CApBK;IAqBNW,aAAa,EAAGd,KAAD,IAAW;MACvBA,KAAK,CAACH,KAAN,GAAc,KAAKkB,KAAL,CAAWC,YAAX,CAAwBC,GAAxB,CAA4B,CAACC,OAAD,EAAUP,KAAV,KAAoB;QAC9D,OAAQO,OAAO,CAACC,MAAR,CAAeC,MAAf,CAAsBC,EAAE,IAAIA,EAAE,CAACC,QAAH,CAAYC,MAAZ,KAAuB,KAAKR,KAAL,CAAWO,QAA9D,EAAwEE,MAAxE,CAA+E,CAAC3B,KAAD,EAAQ4B,IAAR,KAAiB5B,KAAK,GAAI4B,IAAI,CAACC,MAAL,GAAcR,OAAO,CAACb,eAA/H,EAAiJ,CAAjJ,CAAR;MACF,CAFgB,CAAd;IAGF;EAzBK;AAPgB,CAAD,CAA7B;AAoCA,OAAO,MAAM;EAAEN,gBAAF;EAAoBa,aAApB;EAAkCR,qBAAlC;EAAwDE,uBAAxD;EAAgFC,oBAAhF;EAAsGO;AAAtG,IAAwHtB,SAAS,CAACmC,OAAxI;AACP,eAAenC,SAAS,CAACoC,OAAzB"},"metadata":{},"sourceType":"module"}