{"ast":null,"code":"var _jsxFileName = \"H:\\\\Svetik\\\\qa-testing\\\\Scandiweb\\\\volkotrub-shop-project\\\\src\\\\other-components-and-functions\\\\categoryQuery.js\";\nimport { gql, ApolloClient, InMemoryCache } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function categoryQuery(props) {\n  const client = new ApolloClient({\n    uri: 'http://localhost:4000/',\n    cache: new InMemoryCache()\n  });\n  const GET_CATEGORY = gql`\n        query Query {\n  category(input: { title: \"${props}\" }) {\n    name\n    \n    products {\n      id\n      \n      name\n      inStock\n      gallery\n      description\n      category\n      attributes {\n        id\n        \n        name\n        type\n        items {\n          displayValue\n          \n          value\n          id\n        }\n      }\n      prices {\n        currency {\n          symbol\n          \n          label\n        }\n        amount\n        \n      }\n      brand\n    }\n  }\n  currencies {\n    label\n    \n    symbol\n  }\n} `; // const response = {\n  //     data: [],\n  //     loading: false,\n  //     error: null,\n  // }\n\n  async function fetchData() {\n    let result = await client.query({\n      query: GET_CATEGORY\n    }).then(result => {\n      return result;\n    }).catch(error => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Something went wrong\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 39\n      }, this);\n    }); // response.data = result.data.category.products;\n    // response.loading = false;\n    // return response;\n    // },\n    //     (error) => {\n    //         console.log(error);\n    //         return <div>Something went wrong</div>\n\n    return result.data.category.products;\n  }\n\n  fetchData();\n  const response = fetchData();\n  console.log(\"return from function\");\n  console.log(response);\n  return response;\n}","map":{"version":3,"names":["gql","ApolloClient","InMemoryCache","categoryQuery","props","client","uri","cache","GET_CATEGORY","fetchData","result","query","then","catch","error","data","category","products","response","console","log"],"sources":["H:/Svetik/qa-testing/Scandiweb/volkotrub-shop-project/src/other-components-and-functions/categoryQuery.js"],"sourcesContent":["import { gql, ApolloClient, InMemoryCache } from '@apollo/client';\r\n\r\nexport default function categoryQuery(props) {\r\n    const client = new ApolloClient({\r\n  uri: 'http://localhost:4000/',\r\n  cache: new InMemoryCache(),\r\n        });\r\n        const GET_CATEGORY = gql`\r\n        query Query {\r\n  category(input: { title: \"${props}\" }) {\r\n    name\r\n    \r\n    products {\r\n      id\r\n      \r\n      name\r\n      inStock\r\n      gallery\r\n      description\r\n      category\r\n      attributes {\r\n        id\r\n        \r\n        name\r\n        type\r\n        items {\r\n          displayValue\r\n          \r\n          value\r\n          id\r\n        }\r\n      }\r\n      prices {\r\n        currency {\r\n          symbol\r\n          \r\n          label\r\n        }\r\n        amount\r\n        \r\n      }\r\n      brand\r\n    }\r\n  }\r\n  currencies {\r\n    label\r\n    \r\n    symbol\r\n  }\r\n} `;\r\n    // const response = {\r\n    //     data: [],\r\n    //     loading: false,\r\n    //     error: null,\r\n    // }\r\n    \r\n    async function fetchData() {\r\n        \r\n            let result = await client.query({ query: GET_CATEGORY }).then((result) => {\r\n                return result;\r\n            }).catch((error)=>{return <div>Something went wrong</div>});\r\n            \r\n        \r\n        \r\n                // response.data = result.data.category.products;\r\n                // response.loading = false;\r\n               \r\n                // return response;\r\n                // },\r\n                //     (error) => {\r\n                //         console.log(error);\r\n                //         return <div>Something went wrong</div>\r\n        return result.data.category.products; \r\n        \r\n    }\r\n    fetchData();\r\n\r\n const response = fetchData();\r\n    console.log(\"return from function\");\r\n    console.log(response);\r\n    return response;\r\n}"],"mappings":";AAAA,SAASA,GAAT,EAAcC,YAAd,EAA4BC,aAA5B,QAAiD,gBAAjD;;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EACzC,MAAMC,MAAM,GAAG,IAAIJ,YAAJ,CAAiB;IAClCK,GAAG,EAAE,wBAD6B;IAElCC,KAAK,EAAE,IAAIL,aAAJ;EAF2B,CAAjB,CAAf;EAII,MAAMM,YAAY,GAAGR,GAAI;AACjC;AACA,8BAA8BI,KAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GA1CQ,CALqC,CAgDzC;EACA;EACA;EACA;EACA;;EAEA,eAAeK,SAAf,GAA2B;IAEnB,IAAIC,MAAM,GAAG,MAAML,MAAM,CAACM,KAAP,CAAa;MAAEA,KAAK,EAAEH;IAAT,CAAb,EAAsCI,IAAtC,CAA4CF,MAAD,IAAY;MACtE,OAAOA,MAAP;IACH,CAFkB,EAEhBG,KAFgB,CAETC,KAAD,IAAS;MAAC,oBAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAP;IAAuC,CAFvC,CAAnB,CAFmB,CAQf;IACA;IAEA;IACA;IACA;IACA;IACA;;IACR,OAAOJ,MAAM,CAACK,IAAP,CAAYC,QAAZ,CAAqBC,QAA5B;EAEH;;EACDR,SAAS;EAEZ,MAAMS,QAAQ,GAAGT,SAAS,EAA1B;EACGU,OAAO,CAACC,GAAR,CAAY,sBAAZ;EACAD,OAAO,CAACC,GAAR,CAAYF,QAAZ;EACA,OAAOA,QAAP;AACH"},"metadata":{},"sourceType":"module"}