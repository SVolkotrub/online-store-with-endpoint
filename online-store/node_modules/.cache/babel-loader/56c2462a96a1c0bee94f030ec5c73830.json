{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { gql, ApolloClient, InMemoryCache } from '@apollo/client';\nconst fetchCurrency = createAsyncThunk(\"currency/fetchCurrency\", async function (_, _ref) {\n  let {\n    rejectWithValue\n  } = _ref;\n\n  try {\n    const client = new ApolloClient({\n      uri: 'http://localhost:4000/',\n      cache: new InMemoryCache()\n    });\n    const GET_CURRENCY = gql`\n             query Query {\n                currencies {\n                    label\n                    symbol\n                }\n            }`;\n    const response = await client.query({\n      query: GET_CURRENCY\n    }).then(result => {\n      return result.data.currencies;\n    }).catch(error => {\n      throw new Error(\"Something went wrong...\");\n    });\n    console.log(response);\n    return response;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport default fetchCurrency;","map":{"version":3,"names":["createAsyncThunk","gql","ApolloClient","InMemoryCache","fetchCurrency","_","rejectWithValue","client","uri","cache","GET_CURRENCY","response","query","then","result","data","currencies","catch","error","Error","console","log","message"],"sources":["H:/Svetik/qa-testing/Scandiweb/volkotrub-shop-project/src/other-components-and-functions/fetchCurrency.js"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { gql, ApolloClient, InMemoryCache } from '@apollo/client';\r\n\r\nconst fetchCurrency = createAsyncThunk(\r\n    \"currency/fetchCurrency\",\r\n    async function (_, { rejectWithValue }) {\r\n        try {\r\n            const client = new ApolloClient({ uri: 'http://localhost:4000/', cache: new InMemoryCache(), });\r\n            const GET_CURRENCY = gql`\r\n             query Query {\r\n                currencies {\r\n                    label\r\n                    symbol\r\n                }\r\n            }`;\r\n            const response = await client.query({ query: GET_CURRENCY }).then((result) => {\r\n                return result.data.currencies;\r\n            }).catch((error) => { throw new Error(\"Something went wrong...\"); });\r\n            console.log(response);\r\n            return response;\r\n        } catch (error) { return rejectWithValue(error.message); }\r\n    }\r\n);\r\nexport default fetchCurrency;"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AACA,SAASC,GAAT,EAAcC,YAAd,EAA4BC,aAA5B,QAAiD,gBAAjD;AAEA,MAAMC,aAAa,GAAGJ,gBAAgB,CAClC,wBADkC,EAElC,gBAAgBK,CAAhB,QAAwC;EAAA,IAArB;IAAEC;EAAF,CAAqB;;EACpC,IAAI;IACA,MAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;MAAEM,GAAG,EAAE,wBAAP;MAAiCC,KAAK,EAAE,IAAIN,aAAJ;IAAxC,CAAjB,CAAf;IACA,MAAMO,YAAY,GAAGT,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA,cANY;IAOA,MAAMU,QAAQ,GAAG,MAAMJ,MAAM,CAACK,KAAP,CAAa;MAAEA,KAAK,EAAEF;IAAT,CAAb,EAAsCG,IAAtC,CAA4CC,MAAD,IAAY;MAC1E,OAAOA,MAAM,CAACC,IAAP,CAAYC,UAAnB;IACH,CAFsB,EAEpBC,KAFoB,CAEbC,KAAD,IAAW;MAAE,MAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;IAA6C,CAF5C,CAAvB;IAGAC,OAAO,CAACC,GAAR,CAAYV,QAAZ;IACA,OAAOA,QAAP;EACH,CAdD,CAcE,OAAOO,KAAP,EAAc;IAAE,OAAOZ,eAAe,CAACY,KAAK,CAACI,OAAP,CAAtB;EAAwC;AAC7D,CAlBiC,CAAtC;AAoBA,eAAelB,aAAf"},"metadata":{},"sourceType":"module"}