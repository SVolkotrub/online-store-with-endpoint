{"ast":null,"code":"var _jsxFileName = \"H:\\\\Svetik\\\\qa-testing\\\\Scandiweb\\\\volkotrub-shop-project\\\\src\\\\pages\\\\AllCategories.js\";\nimport { PureComponent } from \"react\";\nimport { gql, ApolloClient, InMemoryCache } from '@apollo/client';\nimport { Query } from \"@apollo/client/react/components\"; //    const GET_ALL = gql`\n//         query Query {\n//   category(input: { title: \"all\" }) {\n//     name\n//     __typename @skip(if: true)\n//     products {\n//       id\n//       __typename @skip(if: true)\n//       name\n//       inStock\n//       gallery\n//       description\n//       category\n//       attributes {\n//         id\n//         __typename @skip(if: true)\n//         name\n//         type\n//         items {\n//           displayValue\n//           __typename @skip(if: true)\n//           value\n//           id\n//         }\n//       }\n//       prices {\n//         currency {\n//           symbol\n//           __typename @skip(if: true)\n//           label\n//         }\n//         amount\n//         __typename @skip(if: true)\n//       }\n//       brand\n//     }\n//   }\n//   currencies {\n//     label\n//     __typename @skip(if: true)\n//     symbol\n//   }\n// }\n//         `;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CategoryQuery = () => {\n  return /*#__PURE__*/_jsxDEV(Query, {\n    query: GET_ALL\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CategoryQuery;\n\nclass AllCategories extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      loading: false,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const client = new ApolloClient({\n      uri: 'http://localhost:4000/',\n      cache: new InMemoryCache()\n    });\n    const GET_ALL = gql`\n        query Query {\n  category(input: { title: \"all\" }) {\n    name\n    \n    products {\n      id\n      \n      name\n      inStock\n      gallery\n      description\n      category\n      attributes {\n        id\n        \n        name\n        type\n        items {\n          displayValue\n          \n          value\n          id\n        }\n      }\n      prices {\n        currency {\n          symbol\n          \n          label\n        }\n        amount\n        \n      }\n      brand\n    }\n  }\n  currencies {\n    label\n    \n    symbol\n  }\n} `;\n    client.query({\n      query: GET_ALL\n    }).then(result => console.log(result.data));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hello categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\n;\nexport default AllCategories; //               query Query($input: CategoryInput) {\n//   category(input: { title: \"all\" }) {\n//     name\n//     __typename @skip(if: true)\n//     products {\n//       id\n//       __typename @skip(if: true)\n//       name\n//       inStock\n//       gallery\n//       description\n//       category\n//       attributes {\n//         id\n//         __typename @skip(if: true)\n//         name\n//         type\n//         items {\n//           displayValue\n//           __typename @skip(if: true)\n//           value\n//           id\n//         }\n//       }\n//       prices {\n//         currency {\n//           symbol\n//           __typename @skip(if: true)\n//           label\n//         }\n//         amount\n//         __typename @skip(if: true)\n//       }\n//       brand\n//     }\n//   }\n//   currencies {\n//     label\n//     __typename @skip(if: true)\n//     symbol\n//   }\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryQuery\");","map":{"version":3,"names":["PureComponent","gql","ApolloClient","InMemoryCache","Query","CategoryQuery","GET_ALL","AllCategories","constructor","props","state","data","loading","error","componentDidMount","setState","client","uri","cache","query","then","result","console","log","render"],"sources":["H:/Svetik/qa-testing/Scandiweb/volkotrub-shop-project/src/pages/AllCategories.js"],"sourcesContent":["import { PureComponent } from \"react\";\r\nimport { gql, ApolloClient, InMemoryCache } from '@apollo/client';\r\nimport { Query } from \"@apollo/client/react/components\";\r\n\r\n//    const GET_ALL = gql`\r\n//         query Query {\r\n//   category(input: { title: \"all\" }) {\r\n//     name\r\n//     __typename @skip(if: true)\r\n//     products {\r\n//       id\r\n//       __typename @skip(if: true)\r\n//       name\r\n//       inStock\r\n//       gallery\r\n//       description\r\n//       category\r\n//       attributes {\r\n//         id\r\n//         __typename @skip(if: true)\r\n//         name\r\n//         type\r\n//         items {\r\n//           displayValue\r\n//           __typename @skip(if: true)\r\n//           value\r\n//           id\r\n//         }\r\n//       }\r\n//       prices {\r\n//         currency {\r\n//           symbol\r\n//           __typename @skip(if: true)\r\n//           label\r\n//         }\r\n//         amount\r\n//         __typename @skip(if: true)\r\n//       }\r\n//       brand\r\n//     }\r\n//   }\r\n//   currencies {\r\n//     label\r\n//     __typename @skip(if: true)\r\n//     symbol\r\n//   }\r\n// }\r\n\r\n//         `;\r\n    const CategoryQuery = () =>{\r\nreturn (\r\n    <Query query={GET_ALL}>\r\n        \r\n        </Query>\r\n    )\r\n}\r\n\r\n\r\nclass AllCategories extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        data: [],\r\n        loading: false,\r\n        error: null,\r\n        };\r\n    }\r\n    \r\n \r\n    \r\n    componentDidMount() {\r\n        this.setState({ loading: true });\r\n        const client = new ApolloClient({\r\n  uri: 'http://localhost:4000/',\r\n  cache: new InMemoryCache(),\r\n        });\r\n        const GET_ALL = gql`\r\n        query Query {\r\n  category(input: { title: \"all\" }) {\r\n    name\r\n    \r\n    products {\r\n      id\r\n      \r\n      name\r\n      inStock\r\n      gallery\r\n      description\r\n      category\r\n      attributes {\r\n        id\r\n        \r\n        name\r\n        type\r\n        items {\r\n          displayValue\r\n          \r\n          value\r\n          id\r\n        }\r\n      }\r\n      prices {\r\n        currency {\r\n          symbol\r\n          \r\n          label\r\n        }\r\n        amount\r\n        \r\n      }\r\n      brand\r\n    }\r\n  }\r\n  currencies {\r\n    label\r\n    \r\n    symbol\r\n  }\r\n} `;\r\n        client.query({ query: GET_ALL }).then((result) => console.log(result.data));\r\n        }\r\n        \r\n    \r\nrender() {\r\n    \r\n\r\n    return (<> <p>Hello categories</p>\r\n        \r\n    </>)\r\n    }\r\n};\r\n\r\nexport default AllCategories;\r\n\r\n//               query Query($input: CategoryInput) {\r\n//   category(input: { title: \"all\" }) {\r\n//     name\r\n//     __typename @skip(if: true)\r\n//     products {\r\n//       id\r\n//       __typename @skip(if: true)\r\n//       name\r\n//       inStock\r\n//       gallery\r\n//       description\r\n//       category\r\n//       attributes {\r\n//         id\r\n//         __typename @skip(if: true)\r\n//         name\r\n//         type\r\n//         items {\r\n//           displayValue\r\n//           __typename @skip(if: true)\r\n//           value\r\n//           id\r\n//         }\r\n//       }\r\n//       prices {\r\n//         currency {\r\n//           symbol\r\n//           __typename @skip(if: true)\r\n//           label\r\n//         }\r\n//         amount\r\n//         __typename @skip(if: true)\r\n//       }\r\n//       brand\r\n//     }\r\n//   }\r\n//   currencies {\r\n//     label\r\n//     __typename @skip(if: true)\r\n//     symbol\r\n//   }\r\n// }"],"mappings":";AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,GAAT,EAAcC,YAAd,EAA4BC,aAA5B,QAAiD,gBAAjD;AACA,SAASC,KAAT,QAAsB,iCAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AACI,MAAMC,aAAa,GAAG,MAAK;EAC/B,oBACI,QAAC,KAAD;IAAO,KAAK,EAAEC;EAAd;IAAA;IAAA;IAAA;EAAA,QADJ;AAKC,CANG;;KAAMD,a;;AASV,MAAME,aAAN,SAA4BP,aAA5B,CAA0C;EACtCQ,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACbC,IAAI,EAAE,EADO;MAEbC,OAAO,EAAE,KAFI;MAGbC,KAAK,EAAE;IAHM,CAAb;EAKH;;EAIDC,iBAAiB,GAAG;IAChB,KAAKC,QAAL,CAAc;MAAEH,OAAO,EAAE;IAAX,CAAd;IACA,MAAMI,MAAM,GAAG,IAAId,YAAJ,CAAiB;MACtCe,GAAG,EAAE,wBADiC;MAEtCC,KAAK,EAAE,IAAIf,aAAJ;IAF+B,CAAjB,CAAf;IAIA,MAAMG,OAAO,GAAGL,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GA1CQ;IA2CAe,MAAM,CAACG,KAAP,CAAa;MAAEA,KAAK,EAAEb;IAAT,CAAb,EAAiCc,IAAjC,CAAuCC,MAAD,IAAYC,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACV,IAAnB,CAAlD;EACC;;EAGTa,MAAM,GAAG;IAGL,oBAAQ;MAAA,6BAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAH;IAAA,gBAAR;EAGC;;AAvEqC;;AAwEzC;AAED,eAAejB,aAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}