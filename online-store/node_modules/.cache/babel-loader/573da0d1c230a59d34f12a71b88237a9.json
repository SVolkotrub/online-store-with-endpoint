{"ast":null,"code":"import { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { GET_PRODUCT } from '../components/graphql/getProduct';\nexport default function getProductsByCategory(props) {\n  const client = new ApolloClient({\n    uri: 'http://localhost:4000/',\n    cache: new InMemoryCache()\n  }); //   const GET_PRODUCT = gql`\n  //         query Query {\n  //   product(id: \"${props.id}\") {\n  //     id\n  //     name\n  //     inStock\n  //     gallery\n  //     description\n  //     category\n  //     attributes {\n  //       items {\n  //         id\n  //         value\n  //         displayValue\n  //       }\n  //       type\n  //       name\n  //       id\n  //     }\n  //     prices {\n  //       amount\n  //       currency {\n  //         label\n  //         symbol\n  //       }\n  //     }\n  //     brand\n  //   }\n  // } `;\n\n  async function fetchData() {\n    console.log(\"oooo\", props.id);\n    let result = await client.query({\n      query: GET_PRODUCT,\n      variables: {\n        productId: props.id\n      }\n    }).then(result => {\n      console.log(result);\n      return result;\n    }).catch(error => {\n      console.log(\"Something went wrong in response\");\n    });\n    return result.data.product;\n  }\n\n  const response = fetchData();\n  return response;\n}","map":{"version":3,"names":["ApolloClient","InMemoryCache","GET_PRODUCT","getProductsByCategory","props","client","uri","cache","fetchData","console","log","id","result","query","variables","productId","then","catch","error","data","product","response"],"sources":["H:/Svetik/qa-testing/Scandiweb/volkotrub-shop-project/src/other-components-and-functions/getProductById.js"],"sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client';\r\nimport { GET_PRODUCT } from '../components/graphql/getProduct';\r\n\r\nexport default function getProductsByCategory(props) {\r\n    const client = new ApolloClient({\r\n  uri: 'http://localhost:4000/',\r\n  cache: new InMemoryCache(),\r\n    });\r\n//   const GET_PRODUCT = gql`\r\n//         query Query {\r\n//   product(id: \"${props.id}\") {\r\n//     id\r\n//     name\r\n//     inStock\r\n//     gallery\r\n//     description\r\n//     category\r\n//     attributes {\r\n//       items {\r\n//         id\r\n//         value\r\n//         displayValue\r\n//       }\r\n//       type\r\n//       name\r\n//       id\r\n//     }\r\n//     prices {\r\n//       amount\r\n//       currency {\r\n//         label\r\n//         symbol\r\n//       }\r\n//     }\r\n//     brand\r\n//   }\r\n// } `;\r\n   \r\n    async function fetchData() {\r\n        console.log(\"oooo\", props.id)\r\n      let result = await client.query({ query: GET_PRODUCT, variables: {  productId: props.id} }).then((result) => {\r\n          console.log(result)      \r\n          return result;\r\n            }).catch((error) => {\r\n                console.log(\"Something went wrong in response\");\r\n            });\r\n            \r\n        return result.data.product; \r\n        \r\n    }\r\n const response = fetchData();\r\n    return response;\r\n}"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,gBAA5C;AACA,SAASC,WAAT,QAA4B,kCAA5B;AAEA,eAAe,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;EACjD,MAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;IAClCM,GAAG,EAAE,wBAD6B;IAElCC,KAAK,EAAE,IAAIN,aAAJ;EAF2B,CAAjB,CAAf,CADiD,CAKrD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEI,eAAeO,SAAf,GAA2B;IACvBC,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBN,KAAK,CAACO,EAA1B;IACF,IAAIC,MAAM,GAAG,MAAMP,MAAM,CAACQ,KAAP,CAAa;MAAEA,KAAK,EAAEX,WAAT;MAAsBY,SAAS,EAAE;QAAGC,SAAS,EAAEX,KAAK,CAACO;MAApB;IAAjC,CAAb,EAAyEK,IAAzE,CAA+EJ,MAAD,IAAY;MACzGH,OAAO,CAACC,GAAR,CAAYE,MAAZ;MACA,OAAOA,MAAP;IACG,CAHY,EAGVK,KAHU,CAGHC,KAAD,IAAW;MAChBT,OAAO,CAACC,GAAR,CAAY,kCAAZ;IACH,CALY,CAAnB;IAOE,OAAOE,MAAM,CAACO,IAAP,CAAYC,OAAnB;EAEH;;EACJ,MAAMC,QAAQ,GAAGb,SAAS,EAA1B;EACG,OAAOa,QAAP;AACH"},"metadata":{},"sourceType":"module"}