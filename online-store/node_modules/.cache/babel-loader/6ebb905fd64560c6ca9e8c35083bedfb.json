{"ast":null,"code":"import { PureComponent } from \"react\";\nimport styled from \"styled-components\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilterColor = styled.div`\nwidth: 32px;\nheight: 32px;\ncursor: pointer;\nbackground-color: ${props => props.color};\n${props => props.selected ? `outline-offset: 1px; outline: 1px solid #5ECE7B` : `none`};\n`;\n\nclass ShowAttributesInCart extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      attributesProduct: this.props.product,\n      selectedAttributes: this.props.attributesInStore\n    };\n  }\n\n  render() {\n    const {\n      selectedAttributes,\n      attributesProduct\n    } = this.state;\n    console.log(this.props);\n    console.log(attributesProduct); // if (selectedAttributes[0][0] === \"default\") {\n    //     return (<>\n    //         {attributesProduct.map((obj, indexAttribute) => {\n    //             let attributeNameIndex = obj.name;\n    //             this.setState({  [attributeNameIndex]: this.state[attributeNameIndex]});\n    //             if(this.state[attributeNameIndex] === undefined) {this.setState({ [attributeNameIndex]: 0})}\n    //             if (obj.type !== \"swatch\") {\n    //                 return (\n    //                     <>\n    //                         <p key={indexAttribute} className=\"attribute-name\">{obj.name}:</p>\n    //                         <div key={`itemContainer_${indexAttribute}`} className=\"attribute-item-container\">\n    //                             {obj.items.map((item, index) => {\n    //                                 return (\n    //                                     <div key={index} className={this.state[attributeNameIndex] === index ? \"attribute-item-selected\" : \"attribute-item\"} \n    //                                         onClick={() => { this.setState({  [attributeNameIndex]: index }) }}><p key={index}>{item.value}</p></div>\n    //                                 );\n    //                             })}\n    //                         </div>\n    //                     </>\n    //                 );\n    //             } else {\n    //                         return (\n    //                         <>\n    //                                 <p key={indexAttribute} className=\"attribute-name\">{obj.name}:</p>\n    //                                 <div key={`colorContainer_${indexAttribute}`}  className=\"attribute-color-container\">\n    //                                     {obj.items.map((item, index) => {   \n    //                                         return (\n    //                                             <FilterColor key={index} color={ item.value} selected={this.colorSelect(index)} onClick={()=>{this.setState({selectedColor: index})}} />\n    //                                         );\n    //                                     })}\n    //                                 </div>\n    //                             </>\n    //                         )\n    //                     }\n    //         })\n    //         }\n    //         </>\n    //     )\n    // }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n}\n\nexport default ShowAttributesInCart;","map":{"version":3,"names":["PureComponent","styled","FilterColor","div","props","color","selected","ShowAttributesInCart","constructor","state","attributesProduct","product","selectedAttributes","attributesInStore","render","console","log"],"sources":["H:/Svetik/qa-testing/Scandiweb/volkotrub-shop-project/src/other-components-and-functions/ShowAttributesInCart.js"],"sourcesContent":["import { PureComponent } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst FilterColor = styled.div`\r\nwidth: 32px;\r\nheight: 32px;\r\ncursor: pointer;\r\nbackground-color: ${props => props.color};\r\n${props => props.selected ? `outline-offset: 1px; outline: 1px solid #5ECE7B` : `none`};\r\n`; \r\n\r\nclass ShowAttributesInCart extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            \r\n            attributesProduct: this.props.product,\r\n            selectedAttributes: this.props.attributesInStore,\r\n            \r\n         };\r\n    }\r\n    render() {\r\n        const { selectedAttributes, attributesProduct } = this.state;\r\n        console.log(this.props);\r\n        console.log(attributesProduct);\r\n        // if (selectedAttributes[0][0] === \"default\") {\r\n        //     return (<>\r\n        //         {attributesProduct.map((obj, indexAttribute) => {\r\n        //             let attributeNameIndex = obj.name;\r\n        //             this.setState({  [attributeNameIndex]: this.state[attributeNameIndex]});\r\n        //             if(this.state[attributeNameIndex] === undefined) {this.setState({ [attributeNameIndex]: 0})}\r\n        //             if (obj.type !== \"swatch\") {\r\n        //                 return (\r\n        //                     <>\r\n        //                         <p key={indexAttribute} className=\"attribute-name\">{obj.name}:</p>\r\n        //                         <div key={`itemContainer_${indexAttribute}`} className=\"attribute-item-container\">\r\n        //                             {obj.items.map((item, index) => {\r\n        //                                 return (\r\n        //                                     <div key={index} className={this.state[attributeNameIndex] === index ? \"attribute-item-selected\" : \"attribute-item\"} \r\n        //                                         onClick={() => { this.setState({  [attributeNameIndex]: index }) }}><p key={index}>{item.value}</p></div>\r\n        //                                 );\r\n        //                             })}\r\n        //                         </div>\r\n        //                     </>\r\n        //                 );\r\n        //             } else {\r\n        //                         return (\r\n        //                         <>\r\n        //                                 <p key={indexAttribute} className=\"attribute-name\">{obj.name}:</p>\r\n        //                                 <div key={`colorContainer_${indexAttribute}`}  className=\"attribute-color-container\">\r\n        //                                     {obj.items.map((item, index) => {   \r\n        //                                         return (\r\n        //                                             <FilterColor key={index} color={ item.value} selected={this.colorSelect(index)} onClick={()=>{this.setState({selectedColor: index})}} />\r\n        //                                         );\r\n        //                                     })}\r\n        //                                 </div>\r\n        //                             </>\r\n        //                         )\r\n        //                     }\r\n        //         })\r\n        //         }\r\n        //         </>\r\n        //     )\r\n        // }\r\n        return (\r\n            <>\r\n                \r\n{/*             \r\n             <p className=\"attribute-name\"key={index}>{selectedAttributesArray[0][0] }:</p>\r\n                            <div className=\"cart-item-container\" key={`${index} product container`}>\r\n                                 <div className=\"attribute-item-selected\"><p>S</p></div>\r\n                                <div className=\"attribute-item\"><p>M</p></div>\r\n            </div> */}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShowAttributesInCart;"],"mappings":"AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,WAAW,GAAGD,MAAM,CAACE,GAAI;AAC/B;AACA;AACA;AACA,oBAAoBC,KAAK,IAAIA,KAAK,CAACC,KAAM;AACzC,EAAED,KAAK,IAAIA,KAAK,CAACE,QAAN,GAAkB,iDAAlB,GAAsE,MAAM;AACvF,CANA;;AAQA,MAAMC,oBAAN,SAAmCP,aAAnC,CAAiD;EAC7CQ,WAAW,CAACJ,KAAD,EAAQ;IACf,MAAMA,KAAN;IACA,KAAKK,KAAL,GAAa;MAETC,iBAAiB,EAAE,KAAKN,KAAL,CAAWO,OAFrB;MAGTC,kBAAkB,EAAE,KAAKR,KAAL,CAAWS;IAHtB,CAAb;EAMH;;EACDC,MAAM,GAAG;IACL,MAAM;MAAEF,kBAAF;MAAsBF;IAAtB,IAA4C,KAAKD,KAAvD;IACAM,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAjB;IACAW,OAAO,CAACC,GAAR,CAAYN,iBAAZ,EAHK,CAIL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IACA,oBACI,qCADJ;EAWH;;AAhE4C;;AAmEjD,eAAeH,oBAAf"},"metadata":{},"sourceType":"module"}